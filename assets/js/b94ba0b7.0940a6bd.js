"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[4208],{5970:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"form/date/components/date","title":"<Date />","description":"Date picker without a Label or Feedback","source":"@site/docs/form/date/components/date.md","sourceDirName":"form/date/components","slug":"/form/date/components/date","permalink":"/availity-react/form/date/components/date","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/availity-react/edit/master/docusaurus/docs/form/date/components/date.md","tags":[],"version":"current","frontMatter":{"title":"<Date />"},"sidebar":"someSidebar","previous":{"title":"Getting Started","permalink":"/availity-react/form/date/"},"next":{"title":"<DateField />","permalink":"/availity-react/form/date/components/date-field"}}');var o=t(4848),a=t(8453);const d={title:"<Date />"},r=void 0,s={},c=[{value:"Example",id:"example",level:3},{value:"Live example",id:"live-example",level:4},{value:"Props",id:"props",level:3},{value:"<code>name: string</code>",id:"name-string",level:4},{value:"<code>disabled?: boolean</code>",id:"disabled-boolean",level:4},{value:"<code>min?: string | LimitType</code>",id:"min-string--limittype",level:4},{value:"<code>max?: string | LimitType</code>",id:"max-string--limittype",level:4},{value:"<code>onPickerFocusChange?: ({ focused: boolean }) =&gt; void</code>",id:"onpickerfocuschange--focused-boolean---void",level:4},{value:"<code>format?: string</code>",id:"format-string",level:4},{value:"<code>datePickerProps?: SingleDatePickerShape</code>",id:"datepickerprops-singledatepickershape",level:4},{value:"<code>openDirection?: string</code>",id:"opendirection-string",level:4},{value:"Yup Validation",id:"yup-validation",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Date picker without a ",(0,o.jsx)(n.code,{children:"Label"})," or ",(0,o.jsx)(n.code,{children:"Feedback"})]}),"\n",(0,o.jsxs)(n.p,{children:["If ",(0,o.jsx)(n.code,{children:"initialValues"})," need to be specified for a Date or DateRange, they should be in the format ",(0,o.jsx)(n.code,{children:'"YYYY-MM-DD"'})," or ",(0,o.jsx)(n.code,{children:'moment().format("YYYY-MM-DD")'}),", even though dates are displayed to the user as ",(0,o.jsx)(n.code,{children:"MM/DD/YYYY"})]}),"\n",(0,o.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport { Form } from '@availity/form';\nimport { avDate } from '@availity/yup';\nimport { Button } from 'reactstrap';\nimport Date from '@availity/date';\nimport '@availity/date/styles.scss';\nimport moment from 'moment';\nimport * as yup from 'yup';\n\nconst Example = () => (\n  <Form\n    initialValues={{\n      dateOfService: '',\n    }}\n    onSubmit={(values) => console.log(values)}\n    validationSchema={yup.object().shape({\n      dateOfService: avDate().required(),\n    })}\n  >\n    <Date\n      id=\"dateOfService\"\n      name=\"dateOfService\"\n      min={{ value: 7, units: 'day' }}\n      max={{ value: 7, units: 'day' }}\n    />\n    <Button color=\"primary\" type=\"submit\">\n      Submit\n    </Button>\n  </Form>\n);\n"})}),"\n",(0,o.jsx)(n.h4,{id:"live-example",children:"Live example"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://availity.github.io/availity-react/storybook/?path=/docs/bootstrap-components-date--date-input",children:"Storybook"})}),"\n",(0,o.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"https://github.com/airbnb/react-dates#singledatepicker",children:"react-dates"})," for additional props"]}),"\n",(0,o.jsx)(n.h4,{id:"name-string",children:(0,o.jsx)(n.code,{children:"name: string"})}),"\n",(0,o.jsxs)(n.p,{children:["The name of the field. Will be the key of the selected date that comes through in the values of the ",(0,o.jsx)(n.code,{children:"onSubmit"})," callback."]}),"\n",(0,o.jsx)(n.h4,{id:"disabled-boolean",children:(0,o.jsx)(n.code,{children:"disabled?: boolean"})}),"\n",(0,o.jsx)(n.p,{children:"Whether the date is disabled."}),"\n",(0,o.jsx)(n.h4,{id:"min-string--limittype",children:(0,o.jsx)(n.code,{children:"min?: string | LimitType"})}),"\n",(0,o.jsxs)(n.p,{children:["Used in conjunction with ",(0,o.jsx)(n.code,{children:"max"})," to derive ",(0,o.jsx)(n.code,{children:"isOutsideRange"})," prop from ",(0,o.jsx)(n.code,{children:"react-dates"})," and selectable year options in datepicker. Dates outside the allowed range will not be clickable in datepicker."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"hideCopy=true",children:'{\n  // LimitType\n  "value": "12",\n  "units": "day"\n}\n'})}),"\n",(0,o.jsx)(n.h4,{id:"max-string--limittype",children:(0,o.jsx)(n.code,{children:"max?: string | LimitType"})}),"\n",(0,o.jsxs)(n.p,{children:["Used in conjunction with ",(0,o.jsx)(n.code,{children:"min"})," to derive ",(0,o.jsx)(n.code,{children:"isOutsideRange"})," prop from ",(0,o.jsx)(n.code,{children:"react-dates"})," and selectable year options in datepicker. Dates outside the allowed range will not be clickable in datepicker."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"hideCopy=true",children:'{\n  // LimitType\n  "value": "12",\n  "units": "day"\n}\n'})}),"\n",(0,o.jsx)(n.h4,{id:"onpickerfocuschange--focused-boolean---void",children:(0,o.jsx)(n.code,{children:"onPickerFocusChange?: ({ focused: boolean }) => void"})}),"\n",(0,o.jsx)(n.p,{children:"Function to be run when focus on the input changes."}),"\n",(0,o.jsx)(n.h4,{id:"format-string",children:(0,o.jsx)(n.code,{children:"format?: string"})}),"\n",(0,o.jsxs)(n.p,{children:["How to format date value in ",(0,o.jsx)(n.code,{children:"onSubmit"})," callback. Must be a format recognized by ",(0,o.jsx)(n.a,{href:"https://momentjs.com/docs/#/displaying/format/",children:"moment"}),". ",(0,o.jsxs)(n.strong,{children:["Default: ",(0,o.jsx)(n.code,{children:"MM/DD/YYYY"})]})]}),"\n",(0,o.jsx)(n.h4,{id:"datepickerprops-singledatepickershape",children:(0,o.jsx)(n.code,{children:"datePickerProps?: SingleDatePickerShape"})}),"\n",(0,o.jsxs)(n.p,{children:["Props to be spread onto the datepicker component from ",(0,o.jsx)(n.a,{href:"https://github.com/airbnb/react-dates#singledatepicker",children:"react-dates"}),"."]}),"\n",(0,o.jsx)(n.h4,{id:"opendirection-string",children:(0,o.jsx)(n.code,{children:"openDirection?: string"})}),"\n",(0,o.jsxs)(n.p,{children:["Set which direction the date picker renders. Possible values are ",(0,o.jsx)(n.code,{children:"up"})," and ",(0,o.jsx)(n.code,{children:"down"}),". Default: ",(0,o.jsx)(n.code,{children:"down"})]}),"\n",(0,o.jsx)(n.h3,{id:"yup-validation",children:"Yup Validation"}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["When the existence of ",(0,o.jsx)(n.code,{children:"Date"})," component's field value is used with something like ",(0,o.jsx)(n.code,{children:"yup.when()"})," to help validate another field in the schema, you cannot depend on the truthiness of that field value alone. A ",(0,o.jsx)(n.code,{children:"Date"})," field that has had a value erased does not return to its ",(0,o.jsx)(n.code,{children:"initialValue"}),", instead it is now a ",(0,o.jsx)(n.code,{children:"moment"})," object that will pass a truthy check. Your conditional validation should take this into account."]})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>r});var i=t(6540);const o={},a=i.createContext(o);function d(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);