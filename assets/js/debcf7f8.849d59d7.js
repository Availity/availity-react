"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[5136],{8264:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"bootstrap-components/authorize/authorize","title":"Authorize","description":"Component for showing content based on the user\'s permissions. Wrap this component around content you only want specific users to see.","source":"@site/docs/bootstrap-components/authorize/authorize.mdx","sourceDirName":"bootstrap-components/authorize","slug":"/bootstrap-components/authorize/authorize","permalink":"/availity-react/bootstrap-components/authorize/authorize","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/availity-react/edit/master/docusaurus/docs/bootstrap-components/authorize/authorize.mdx","tags":[],"version":"current","frontMatter":{"title":"Authorize","slug":"authorize"},"sidebar":"someSidebar","previous":{"title":"Getting Started","permalink":"/availity-react/bootstrap-components/authorize/"},"next":{"title":"useAuthorize","permalink":"/availity-react/bootstrap-components/authorize/useAuthorize"}}');var o=t(4848),s=t(8453);const i={title:"Authorize",slug:"authorize"},a=void 0,d={},c=[{value:"Props",id:"props",level:2},{value:"<code>permissions: (string | string[])[]</code>",id:"permissions-string--string",level:3},{value:"<code>resources?: (string | string[])[]</code>",id:"resources-string--string",level:3},{value:"<code>loader?: boolean | ReactNode</code>",id:"loader-boolean--reactnode",level:3},{value:"<code>organizationId?: string</code>",id:"organizationid-string",level:3},{value:"<code>customerId?: string</code>",id:"customerid-string",level:3},{value:"<code>region?: string | boolean</code>",id:"region-string--boolean",level:3},{value:"<code>unauthorized?: ReactNode</code>",id:"unauthorized-reactnode",level:3},{value:"<code>children: ReactNode</code>",id:"children-reactnode",level:3},{value:"<code>negate?: boolean</code>",id:"negate-boolean",level:3},{value:"Example",id:"example",level:2},{value:"Storybook",id:"storybook",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Component for showing content based on the user's permissions. Wrap this component around content you only want specific users to see."}),"\n",(0,o.jsxs)(n.p,{children:["This package uses ",(0,o.jsx)(n.a,{href:"https://react-query.tanstack.com/",children:"react-query"})," to handle data fetching. This means you must add a ",(0,o.jsx)(n.a,{href:"https://react-query.tanstack.com/reference/QueryClientProvider#_top",children:"QueryClientProvider"})," to your app if you do not already have one. The default setup should cover most use-cases. However, there are 2 options we recommend looking into in order to determine what is correct for your app. These settings are ",(0,o.jsx)(n.code,{children:"refetchOnWindowFocus"})," and ",(0,o.jsx)(n.code,{children:"staleTime"}),". The first option sets whether the to refetch the query when the window is focused, and the other is the default marker for how long the query is valid."]}),"\n",(0,o.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,o.jsx)(n.h3,{id:"permissions-string--string",children:(0,o.jsx)(n.code,{children:"permissions: (string | string[])[]"})}),"\n",(0,o.jsxs)(n.p,{children:["Can either be a string, eg: ",(0,o.jsx)(n.code,{children:'"1234"'}),", a number, eg: ",(0,o.jsx)(n.code,{children:"1234"}),", or an array, which can contain permission ID strings/numbers as well as other arrays which contain permission ID strings/numbers, eg: ",(0,o.jsx)(n.code,{children:"['1234', '2345', ['3456', '4567'], ['5678', '6789']]"}),". The items in a nested array indicate permission IDs that must ",(0,o.jsx)(n.em,{children:"all"}),' be granted to the user to be considered authorized - they act as "AND". The items in the top of the array act as "OR" - if ',(0,o.jsx)(n.em,{children:"any"})," are granted, the user is considered authorized. The example ",(0,o.jsx)(n.code,{children:"['1234', '2345', ['3456', '4567'], ['5678', '6789']]"})," is similar to ",(0,o.jsx)(n.code,{children:"'1234' OR '2345' OR ('3456' && '4567') OR ('5678' && '6789')"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"resources-string--string",children:(0,o.jsx)(n.code,{children:"resources?: (string | string[])[]"})}),"\n",(0,o.jsxs)(n.p,{children:["When present, the permission is validated to ensure it contains the resource(s). Can either be a string, eg: ",(0,o.jsx)(n.code,{children:'"12345"'}),", a number, eg: ",(0,o.jsx)(n.code,{children:"12345"}),", or an array, which can contain resource ID strings/numbers as well as other arrays which contain resource ID strings/numbers, eg: ",(0,o.jsx)(n.code,{children:"['12345', '23456', ['34567', '45678'], ['56789', '67890']]"}),". The items in a nested array indicate resource IDs that must ",(0,o.jsx)(n.em,{children:"all"}),' be granted to the user to be considered authorized - they act as "AND". The items in the top of the array act as "OR" - if ',(0,o.jsx)(n.em,{children:"any"})," are granted, the user is considered authorized. The example ",(0,o.jsx)(n.code,{children:"['12345', '23456', ['34567', '45678'], ['56789', '67890']]"})," is similar to ",(0,o.jsx)(n.code,{children:"'12345' OR '23456' OR ('34567' && '45678') OR ('56789' && '67890')"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"loader-boolean--reactnode",children:(0,o.jsx)(n.code,{children:"loader?: boolean | ReactNode"})}),"\n",(0,o.jsxs)(n.p,{children:["When ",(0,o.jsx)(n.code,{children:"true"}),", ",(0,o.jsx)(n.code,{children:"BlockUi"})," is used when loading the permissions. When a ",(0,o.jsx)(n.code,{children:"node"}),", that node is rendered instead of ",(0,o.jsx)(n.code,{children:"BlockUi"})," when loading the permissions. When ",(0,o.jsx)(n.code,{children:"false"}),", nothing is rendered when loading the permissions. ",(0,o.jsx)(n.strong,{children:"Default:"})," ",(0,o.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"organizationid-string",children:(0,o.jsx)(n.code,{children:"organizationId?: string"})}),"\n",(0,o.jsx)(n.p,{children:"When present, the permission is validated to ensure it is assigned to the organization."}),"\n",(0,o.jsx)(n.h3,{id:"customerid-string",children:(0,o.jsx)(n.code,{children:"customerId?: string"})}),"\n",(0,o.jsx)(n.p,{children:"When present, the permission is validated to ensure it is assigned to the customer."}),"\n",(0,o.jsx)(n.h3,{id:"region-string--boolean",children:(0,o.jsx)(n.code,{children:"region?: string | boolean"})}),"\n",(0,o.jsxs)(n.p,{children:["When a string, the permission is validated to ensure it is assigned in the provided region. When true, the permission is validated to ensure it is assigned in the current region. ",(0,o.jsx)(n.strong,{children:"Default:"})," ",(0,o.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"unauthorized-reactnode",children:(0,o.jsx)(n.code,{children:"unauthorized?: ReactNode"})}),"\n",(0,o.jsxs)(n.p,{children:["The content that renders when the user ",(0,o.jsx)(n.em,{children:"does not"})," have the permissions required."]}),"\n",(0,o.jsx)(n.h3,{id:"children-reactnode",children:(0,o.jsx)(n.code,{children:"children: ReactNode"})}),"\n",(0,o.jsxs)(n.p,{children:["The content that renders when the user ",(0,o.jsx)(n.em,{children:"does"})," have the permissions required."]}),"\n",(0,o.jsx)(n.h3,{id:"negate-boolean",children:(0,o.jsx)(n.code,{children:"negate?: boolean"})}),"\n",(0,o.jsxs)(n.p,{children:["Negate the authorization. If the user ",(0,o.jsx)(n.em,{children:"does"}),' have the permissions specified, they are considered "unauthorized" (shown the ',(0,o.jsx)(n.code,{children:"unauthorized"})," prop content). If the user ",(0,o.jsx)(n.em,{children:"does not"}),' have the permissions specified, they are considered "authorized" (shown the ',(0,o.jsx)(n.code,{children:"children"})," prop content)"]}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport Authorize from '@availity/authorize';\n\nconst Example = () => (\n  <Authorize permissions={['1234']}>\n    {/* stuff to render if the user is authorized with permission indicated above */}\n  </Authorize>\n);\n"})}),"\n",(0,o.jsx)(n.h2,{id:"storybook",children:"Storybook"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://availity.github.io/availity-react/storybook/?path=/docs/bootstrap-components-authorize-authorize--docs",children:"Live Example"})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);