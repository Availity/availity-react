"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[250],{5896:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>r});const n=JSON.parse('{"id":"bootstrap-components/feedback/form","title":"<FeedbackForm />","description":"This is the underlying form, which is exposed in case you need to gather feedback inline.","source":"@site/docs/bootstrap-components/feedback/form.md","sourceDirName":"bootstrap-components/feedback","slug":"/bootstrap-components/feedback/form","permalink":"/availity-react/bootstrap-components/feedback/form","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/availity-react/edit/master/docusaurus/docs/bootstrap-components/feedback/form.md","tags":[],"version":"current","frontMatter":{"title":"<FeedbackForm />"},"sidebar":"someSidebar","previous":{"title":"<Feedback />","permalink":"/availity-react/bootstrap-components/feedback/feedback"},"next":{"title":"Icon","permalink":"/availity-react/bootstrap-components/icon"}}');var d=t(4848),s=t(8453);const c={title:"<FeedbackForm />"},i=void 0,a={},r=[{value:"Example",id:"example",level:3},{value:"Live example: Storybook",id:"live-example-storybook",level:4},{value:"Props",id:"props",level:3},{value:"<code>name?: string</code>",id:"name-string",level:4},{value:"<code>onFeedbackSent?: (feedback: FeedbackObject) =&gt; void</code>",id:"onfeedbacksent-feedback-feedbackobject--void",level:4},{value:"<code>faceOptions?: object[]</code>",id:"faceoptions-object",level:4},{value:"<code>aboutOptions?: object[]</code>",id:"aboutoptions-object",level:4},{value:"<code>aboutLabel?: node</code>",id:"aboutlabel-node",level:4},{value:"<code>onClose?: () =&gt; void</code>",id:"onclose---void",level:4},{value:"<code>prompt?: string</code>",id:"prompt-string",level:4},{value:"<code>additionalComments?: boolean</code>",id:"additionalcomments-boolean",level:4},{value:"<code>staticFields?: object</code>",id:"staticfields-object",level:4},{value:"<code>autoFocusFeedbackButton?: bool</code>",id:"autofocusfeedbackbutton-bool",level:4},{value:"<code>modalHeaderProps?: ModalHeaderProps</code>",id:"modalheaderprops-modalheaderprops",level:4},{value:"<code>...rest</code>",id:"rest",level:4}];function l(e){const o={a:"a",blockquote:"blockquote",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(o.p,{children:"This is the underlying form, which is exposed in case you need to gather feedback inline."}),"\n",(0,d.jsx)(o.h3,{id:"example",children:"Example"}),"\n",(0,d.jsx)(o.pre,{children:(0,d.jsx)(o.code,{className:"language-jsx",children:"import React from 'react';\nimport { FeedbackForm } from '@availity/feedback';\n\nconst Example = () => <FeedbackForm name=\"Payer Space\" />;\n"})}),"\n",(0,d.jsxs)(o.h4,{id:"live-example-storybook",children:["Live example: ",(0,d.jsx)(o.a,{href:"https://availity.github.io/availity-react/storybook/?path=/docs/bootstrap-components-feedback-feedbackwithform--docs",children:"Storybook"})]}),"\n",(0,d.jsx)(o.h3,{id:"props",children:"Props"}),"\n",(0,d.jsx)(o.h4,{id:"name-string",children:(0,d.jsx)(o.code,{children:"name?: string"})}),"\n",(0,d.jsx)(o.p,{children:"The name of the application this feedback is for. It is used in the API request to indicate where the feedback came from."}),"\n",(0,d.jsx)(o.h4,{id:"onfeedbacksent-feedback-feedbackobject--void",children:(0,d.jsx)(o.code,{children:"onFeedbackSent?: (feedback: FeedbackObject) => void"})}),"\n",(0,d.jsx)(o.p,{children:"Callback for when the feedback is submitted. It is called with the feedback object."}),"\n",(0,d.jsx)(o.h4,{id:"faceoptions-object",children:(0,d.jsx)(o.code,{children:"faceOptions?: object[]"})}),"\n",(0,d.jsxs)(o.p,{children:["Array of Objects containing ",(0,d.jsx)(o.strong,{children:(0,d.jsx)(o.code,{children:"icon"})})," (String), ",(0,d.jsx)(o.strong,{children:(0,d.jsx)(o.code,{children:"description"})})," (String), and ",(0,d.jsx)(o.strong,{children:(0,d.jsx)(o.code,{children:"label"})})," (String) properties. Allows you to override the smiley face options which appear. Default: Smiley Face, Meh Face, and Frowny Face."]}),"\n",(0,d.jsxs)(o.blockquote,{children:["\n",(0,d.jsxs)(o.p,{children:["Previous ",(0,d.jsx)(o.code,{children:"placeholder"})," property removed as of v6.0.0. Use ",(0,d.jsx)(o.code,{children:"label"})," instead."]}),"\n"]}),"\n",(0,d.jsx)(o.h4,{id:"aboutoptions-object",children:(0,d.jsx)(o.code,{children:"aboutOptions?: object[]"})}),"\n",(0,d.jsxs)(o.p,{children:["Array of Objects containing ",(0,d.jsx)(o.strong,{children:(0,d.jsx)(o.code,{children:"value"})})," (String,Number) and ",(0,d.jsx)(o.strong,{children:(0,d.jsx)(o.code,{children:"label"})})," (String) properties. Allows a dropdown displaying the options provided to let the user indicate what the feedback is about."]}),"\n",(0,d.jsx)(o.h4,{id:"aboutlabel-node",children:(0,d.jsx)(o.code,{children:"aboutLabel?: node"})}),"\n",(0,d.jsxs)(o.p,{children:["Label text for the dropdown created via the ",(0,d.jsx)(o.code,{children:"aboutOptions"})," prop. ",(0,d.jsx)(o.strong,{children:"Default:"})," ",(0,d.jsx)(o.code,{children:'"This is about"'}),"."]}),"\n",(0,d.jsxs)(o.blockquote,{children:["\n",(0,d.jsxs)(o.p,{children:["Previously ",(0,d.jsx)(o.code,{children:"aboutPlaceholder"}),". All placeholders replaced with labels starting v6.0.0."]}),"\n"]}),"\n",(0,d.jsx)(o.h4,{id:"onclose---void",children:(0,d.jsx)(o.code,{children:"onClose?: () => void"})}),"\n",(0,d.jsxs)(o.p,{children:['When provided, a "Close" button is rendered and ',(0,d.jsx)(o.code,{children:"onClose"})," is excuted when it's clicked."]}),"\n",(0,d.jsx)(o.h4,{id:"prompt-string",children:(0,d.jsx)(o.code,{children:"prompt?: string"})}),"\n",(0,d.jsxs)(o.p,{children:["Text that prompts the user to provider feedback. ",(0,d.jsx)(o.strong,{children:"Default:"})," ",(0,d.jsx)(o.code,{children:'"Tell us what you think about ${appName}."'}),"."]}),"\n",(0,d.jsx)(o.h4,{id:"additionalcomments-boolean",children:(0,d.jsx)(o.code,{children:"additionalComments?: boolean"})}),"\n",(0,d.jsxs)(o.p,{children:["If ",(0,d.jsx)(o.code,{children:"true"}),", shows an optional comments field below."]}),"\n",(0,d.jsx)(o.h4,{id:"staticfields-object",children:(0,d.jsx)(o.code,{children:"staticFields?: object"})}),"\n",(0,d.jsx)(o.p,{children:"Static (non-user-entered) key/value pairs to be sent in feedback submission."}),"\n",(0,d.jsx)(o.h4,{id:"autofocusfeedbackbutton-bool",children:(0,d.jsx)(o.code,{children:"autoFocusFeedbackButton?: bool"})}),"\n",(0,d.jsxs)(o.p,{children:["Default: ",(0,d.jsx)(o.code,{children:"true"}),". When set to false, the first feedback button is not focused. This is to avoid issues with focus causing other elements to close (e.g. dropdowns)"]}),"\n",(0,d.jsx)(o.h4,{id:"modalheaderprops-modalheaderprops",children:(0,d.jsx)(o.code,{children:"modalHeaderProps?: ModalHeaderProps"})}),"\n",(0,d.jsxs)(o.p,{children:["Props to be spread onto the ",(0,d.jsx)(o.code,{children:"<ModalHeader />"})," rendered inside of the ",(0,d.jsx)(o.code,{children:"<FeedbackForm />"}),". See ",(0,d.jsx)(o.a,{href:"https://github.com/reactstrap/reactstrap/blob/master/src/ModalHeader.js",children:"ModalHeader"})]}),"\n",(0,d.jsxs)(o.blockquote,{children:["\n",(0,d.jsxs)(o.p,{children:["For accessibility use ",(0,d.jsx)(o.code,{children:"className"})," instead of ",(0,d.jsx)(o.code,{children:"tag"})," to adjust size and style of header."]}),"\n"]}),"\n",(0,d.jsx)(o.h4,{id:"rest",children:(0,d.jsx)(o.code,{children:"...rest"})}),"\n",(0,d.jsxs)(o.p,{children:["View full set of ",(0,d.jsx)(o.a,{href:"https://availity.github.io/availity-react/form/components/form/",children:"Form Props"})]})]})}function h(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,d.jsx)(o,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>c,x:()=>i});var n=t(6540);const d={},s=n.createContext(d);function c(e){const o=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);