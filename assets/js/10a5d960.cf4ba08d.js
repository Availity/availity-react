"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[1089],{8453:(n,e,o)=>{o.d(e,{R:()=>c,x:()=>r});var t=o(6540);const s={},i=t.createContext(s);function c(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),t.createElement(i.Provider,{value:e},n.children)}},8523:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"components/hooks/use-mount","title":"useMount","description":"Hook that runs a function on mount and dismount if a function is returned.","source":"@site/docs/components/hooks/use-mount.md","sourceDirName":"components/hooks","slug":"/components/hooks/use-mount","permalink":"/availity-react/components/hooks/use-mount","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/hooks/use-mount.md","tags":[],"version":"current","frontMatter":{"title":"useMount"},"sidebar":"someSidebar","previous":{"title":"useEffectAsync","permalink":"/availity-react/components/hooks/use-effect-async"},"next":{"title":"useCurrentRegion","permalink":"/availity-react/components/hooks/use-region"}}');var s=o(4848),i=o(8453);const c={title:"useMount"},r=void 0,a={},u=[{value:"Example",id:"example",level:3},{value:"Props",id:"props",level:3},{value:"<code>callback: () =&gt; void</code>",id:"callback---void",level:4}];function l(n){const e={code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:"Hook that runs a function on mount and dismount if a function is returned."}),"\n",(0,s.jsx)(e.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-jsx",children:"import React from 'react';\nimport { useMount } from '@availity/hooks';\n\nconst Example = () => {\n  useMount(() => {\n    doSomethingOnMount();\n\n    return () => {\n      doSomethingOnDismount();\n    };\n  });\n\n  return <div>Test Component</div>;\n};\n"})}),"\n",(0,s.jsx)(e.h3,{id:"props",children:"Props"}),"\n",(0,s.jsx)(e.h4,{id:"callback---void",children:(0,s.jsx)(e.code,{children:"callback: () => void"})}),"\n",(0,s.jsx)(e.p,{children:"Function to run when the component mounts."})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}}}]);