"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[2566],{4072:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>c,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"bootstrap-components/change-password/change-password-form","title":"<ChangePasswordForm />","description":"The form to change the user\'s password","source":"@site/docs/bootstrap-components/change-password/change-password-form.md","sourceDirName":"bootstrap-components/change-password","slug":"/bootstrap-components/change-password/change-password-form","permalink":"/availity-react/bootstrap-components/change-password/change-password-form","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/availity-react/edit/master/docusaurus/docs/bootstrap-components/change-password/change-password-form.md","tags":[],"version":"current","frontMatter":{"title":"<ChangePasswordForm />"},"sidebar":"someSidebar","previous":{"title":"<ChangePassword />","permalink":"/availity-react/bootstrap-components/change-password/"},"next":{"title":"useChangePasswordContext","permalink":"/availity-react/bootstrap-components/change-password/use-change-password"}}');var r=s(4848),t=s(8453);const c={title:"<ChangePasswordForm />"},d=void 0,i={},a=[{value:"Props",id:"props",level:3},{value:"<code>onErrorToggle?: ({ setLoading: func, setError: func, setSuccess: func, setSubmitted: func }) =&gt; void</code>",id:"onerrortoggle--setloading-func-seterror-func-setsuccess-func-setsubmitted-func---void",level:4},{value:"<code>onSuccessToggle?: ({ setLoading: func, setError: func, setSuccess: func, setSubmitted: func }) =&gt; void</code>",id:"onsuccesstoggle--setloading-func-seterror-func-setsuccess-func-setsubmitted-func---void",level:4},{value:"<code>onHandleSubmit?: ({ result: any, setSuccess: func, setError: func } ) =&gt; void</code>",id:"onhandlesubmit--result-any-setsuccess-func-seterror-func----void",level:4},{value:"<code>onError?: ({ error: Error, setSuccess: func, setError: func }) =&gt; void</code>",id:"onerror--error-error-setsuccess-func-seterror-func---void",level:4},{value:"<code>additionalButtons?: React.ReactNode</code>",id:"additionalbuttons-reactreactnode",level:4},{value:"<code>additionalFields?: React.ReactNode</code>",id:"additionalfields-reactreactnode",level:4},{value:"<code>initialValues?: object</code>",id:"initialvalues-object",level:4},{value:"<code>header?: React.ReactNode</code>",id:"header-reactreactnode",level:4},{value:"<code>maxLength?: number</code>",id:"maxlength-number",level:4},{value:"<code>currentPasswordProps?: object</code>",id:"currentpasswordprops-object",level:4},{value:"<code>showCurrentPassword?: boolean</code>",id:"showcurrentpassword-boolean",level:4},{value:"<code>newPasswordProps?: object</code>",id:"newpasswordprops-object",level:4},{value:"<code>confirmNewPasswordProps?: object</code>",id:"confirmnewpasswordprops-object",level:4}];function l(e){const o={code:"code",h3:"h3",h4:"h4",p:"p",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.p,{children:"The form to change the user's password"}),"\n",(0,r.jsx)(o.h3,{id:"props",children:"Props"}),"\n",(0,r.jsx)(o.h4,{id:"onerrortoggle--setloading-func-seterror-func-setsuccess-func-setsubmitted-func---void",children:(0,r.jsx)(o.code,{children:"onErrorToggle?: ({ setLoading: func, setError: func, setSuccess: func, setSubmitted: func }) => void"})}),"\n",(0,r.jsxs)(o.p,{children:["Function to call when error ",(0,r.jsx)(o.code,{children:"<Alert/>"})," is toggled. Defaults to setting the error state to null."]}),"\n",(0,r.jsx)(o.h4,{id:"onsuccesstoggle--setloading-func-seterror-func-setsuccess-func-setsubmitted-func---void",children:(0,r.jsx)(o.code,{children:"onSuccessToggle?: ({ setLoading: func, setError: func, setSuccess: func, setSubmitted: func }) => void"})}),"\n",(0,r.jsxs)(o.p,{children:["Function to call when success ",(0,r.jsx)(o.code,{children:"<Alert/>"})," is toggled. Defaults to setting the success state to null."]}),"\n",(0,r.jsx)(o.h4,{id:"onhandlesubmit--result-any-setsuccess-func-seterror-func----void",children:(0,r.jsx)(o.code,{children:"onHandleSubmit?: ({ result: any, setSuccess: func, setError: func } ) => void"})}),"\n",(0,r.jsxs)(o.p,{children:["Function to call when the form is submitted. It is called with an object containing the result from the ",(0,r.jsx)(o.code,{children:"changePassword"})," method that is called on the ",(0,r.jsx)(o.code,{children:"resource"}),", the ",(0,r.jsx)(o.code,{children:"setSuccess"})," function, and the ",(0,r.jsx)(o.code,{children:"setError"})," function."]}),"\n",(0,r.jsx)(o.h4,{id:"onerror--error-error-setsuccess-func-seterror-func---void",children:(0,r.jsx)(o.code,{children:"onError?: ({ error: Error, setSuccess: func, setError: func }) => void"})}),"\n",(0,r.jsxs)(o.p,{children:["Function to call when an error occurs calling the ",(0,r.jsx)(o.code,{children:"changePassword"})," method on the ",(0,r.jsx)(o.code,{children:"resource"}),". It is called with an object containing the ",(0,r.jsx)(o.code,{children:"error"})," caught from calling ",(0,r.jsx)(o.code,{children:"resource.changePassword()"}),", the ",(0,r.jsx)(o.code,{children:"setSuccess"})," function, and the ",(0,r.jsx)(o.code,{children:"setError"})," function."]}),"\n",(0,r.jsx)(o.h4,{id:"additionalbuttons-reactreactnode",children:(0,r.jsx)(o.code,{children:"additionalButtons?: React.ReactNode"})}),"\n",(0,r.jsx)(o.p,{children:"Additional Buttons to render to the right of the Submit button."}),"\n",(0,r.jsx)(o.h4,{id:"additionalfields-reactreactnode",children:(0,r.jsx)(o.code,{children:"additionalFields?: React.ReactNode"})}),"\n",(0,r.jsxs)(o.p,{children:["Additional Fields to render in the ",(0,r.jsx)(o.code,{children:"<Form />"})]}),"\n",(0,r.jsx)(o.h4,{id:"initialvalues-object",children:(0,r.jsx)(o.code,{children:"initialValues?: object"})}),"\n",(0,r.jsxs)(o.p,{children:["Explicitly set initial values for the form. Spreads onto the default ",(0,r.jsx)(o.code,{children:"initialValues"}),". Useful in conjunction with ",(0,r.jsx)(o.code,{children:"additionalFields"})]}),"\n",(0,r.jsx)(o.h4,{id:"header-reactreactnode",children:(0,r.jsx)(o.code,{children:"header?: React.ReactNode"})}),"\n",(0,r.jsx)(o.p,{children:"The header to render above the form inputs"}),"\n",(0,r.jsx)(o.h4,{id:"maxlength-number",children:(0,r.jsx)(o.code,{children:"maxLength?: number"})}),"\n",(0,r.jsx)(o.p,{children:"The maximum length of the user's password"}),"\n",(0,r.jsx)(o.h4,{id:"currentpasswordprops-object",children:(0,r.jsx)(o.code,{children:"currentPasswordProps?: object"})}),"\n",(0,r.jsx)(o.p,{children:"Additional props to spread onto the current password input field"}),"\n",(0,r.jsx)(o.h4,{id:"showcurrentpassword-boolean",children:(0,r.jsx)(o.code,{children:"showCurrentPassword?: boolean"})}),"\n",(0,r.jsxs)(o.p,{children:["Conditionally render the current password input field. Defaults to ",(0,r.jsx)(o.code,{children:"true"})]}),"\n",(0,r.jsx)(o.h4,{id:"newpasswordprops-object",children:(0,r.jsx)(o.code,{children:"newPasswordProps?: object"})}),"\n",(0,r.jsx)(o.p,{children:"Additional props to spread onto the new password input field"}),"\n",(0,r.jsx)(o.h4,{id:"confirmnewpasswordprops-object",children:(0,r.jsx)(o.code,{children:"confirmNewPasswordProps?: object"})}),"\n",(0,r.jsx)(o.p,{children:"Additional props to spread onto the confirm new password input field"})]})}function u(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,o,s)=>{s.d(o,{R:()=>c,x:()=>d});var n=s(6540);const r={},t=n.createContext(r);function c(e){const o=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(t.Provider,{value:o},e.children)}}}]);