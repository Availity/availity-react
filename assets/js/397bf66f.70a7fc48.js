"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[8248],{8453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>c});var n=o(6540);const s={},i=n.createContext(s);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(i.Provider,{value:t},e.children)}},8600:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"components/hooks/use-timeout","title":"useTimeout","description":"Hook that returns true after the given amount of time in milliseconds.","source":"@site/docs/components/hooks/use-timeout.md","sourceDirName":"components/hooks","slug":"/components/hooks/use-timeout","permalink":"/availity-react/components/hooks/use-timeout","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/hooks/use-timeout.md","tags":[],"version":"current","frontMatter":{"title":"useTimeout"},"sidebar":"someSidebar","previous":{"title":"useCurrentRegion","permalink":"/availity-react/components/hooks/use-region"},"next":{"title":"useToggle","permalink":"/availity-react/components/hooks/use-toggle"}}');var s=o(4848),i=o(8453);const r={title:"useTimeout"},c=void 0,u={},a=[{value:"Example",id:"example",level:3},{value:"Props",id:"props",level:3},{value:"<code>milliseconds?: number</code>",id:"milliseconds-number",level:4}];function l(e){const t={code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Hook that returns true after the given amount of time in milliseconds."}),"\n",(0,s.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:"import React from 'react';\nimport { useTimeout } from '@availity/hooks';\n\nconst Example = () => {\n  const timeIsUp = useTimeout(5000);\n\n  return <div>{timeIsUp ? 'Time is up' : 'Still waiting'}</div>;\n};\n"})}),"\n",(0,s.jsx)(t.h3,{id:"props",children:"Props"}),"\n",(0,s.jsx)(t.h4,{id:"milliseconds-number",children:(0,s.jsx)(t.code,{children:"milliseconds?: number"})}),"\n",(0,s.jsx)(t.p,{children:"The number of milliseconds to wait before returning true."})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);