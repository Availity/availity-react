"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[9413],{7057:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"bootstrap-components/link","title":"Link","description":"Simple link component that renders an ` tag with the href` formatted to leverage loadApp so that when the link is opened in a new tab, it gets loaded inside the home page\'s iframe","source":"@site/docs/bootstrap-components/link.mdx","sourceDirName":"bootstrap-components","slug":"/bootstrap-components/link","permalink":"/availity-react/bootstrap-components/link","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/availity-react/edit/master/docusaurus/docs/bootstrap-components/link.mdx","tags":[],"version":"current","frontMatter":{"title":"Link"},"sidebar":"someSidebar","previous":{"title":"json-viewer","permalink":"/availity-react/bootstrap-components/json-viewer/json-viewer"},"next":{"title":"List Group","permalink":"/availity-react/bootstrap-components/list-group"}}');var i=t(4848),l=t(8453);const r={title:"Link"},a=void 0,s={},d=[{value:"Installation",id:"installation",level:3},{value:"Example",id:"example",level:3},{value:"Live example",id:"live-example",level:4},{value:"Props",id:"props",level:3},{value:"<code>href: string</code>",id:"href-string",level:4},{value:"<code>target?: string</code>",id:"target-string",level:4},{value:"<code>tag?: React.ComponentType | string</code>",id:"tag-reactcomponenttype--string",level:4},{value:"<code>onClick: (event: Event, url: string) =&gt; void</code>",id:"onclick-event-event-url-string--void",level:4},{value:"<code>loadApp?: boolean</code>",id:"loadapp-boolean",level:4}];function c(e){const n={a:"a",code:"code",em:"em",h3:"h3",h4:"h4",img:"img",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Simple link component that renders an ",(0,i.jsx)(n.code,{children:"<a>"})," tag with the ",(0,i.jsx)(n.code,{children:"href"})," formatted to leverage loadApp so that when the link is opened in a new tab, it gets loaded inside the home page's iframe"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/@availity/link",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/npm/v/@availity/link.svg?style=for-the-badge",alt:"Version"})})}),"\n",(0,i.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.p,{children:"npm"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install @availity/link\n"})}),"\n",(0,i.jsx)(n.p,{children:"Yarn"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn add @availity/link\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"AvLink"})," component has been modified to work with the Availity Portal. The portal serves apps based on the ",(0,i.jsx)(n.code,{children:"appUrl"})," query parameter and the ",(0,i.jsx)(n.code,{children:"AvLink"})," component assumes you want to navigate with that rule in mind. This is the preferred method for routing from app to app in the portal as it properly accounts for the ",(0,i.jsx)(n.code,{children:"Navigation"})," when inside the portal."]}),"\n",(0,i.jsxs)(n.p,{children:["Let's assume we have an application that is served at the url: ",(0,i.jsx)(n.code,{children:"/web/hello/world"}),". If we pass that relative url to the ",(0,i.jsx)(n.code,{children:"href"})," prop, then clicking the link will take us to: ",(0,i.jsx)(n.code,{children:"https://availity.github.io/public/apps/home/#!/loadApp?appUrl=%2Fweb%2Fhello%2Fworld"}),". Notice our provided url was encoded and added to the ",(0,i.jsx)(n.code,{children:"appUrl"})," query parameter. The code for the above sample can be found below."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport AvLink from '@availity/link';\n\nconst Example = () => <AvLink href=\"/web/hello/world\">My Application</AvLink>;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If instead you would like to route directly to ",(0,i.jsx)(n.code,{children:"apps.availity.com/web/hello/world"}),", then set the ",(0,i.jsx)(n.code,{children:"loadApp"})," prop to ",(0,i.jsx)(n.code,{children:"false"}),". This is ",(0,i.jsx)(n.em,{children:"not"})," recommended as you could lose the ",(0,i.jsx)(n.code,{children:"Navigation"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport AvLink from '@availity/link';\n\nconst Example = () => (\n  <AvLink href=\"/web/hello/world\" loadApp={false}>\n    My Application\n  </AvLink>\n);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You do not need to worry about using the ",(0,i.jsx)(n.code,{children:"loadApp"})," prop when you pass an absolute url. Navigating away from the portal is the most common use case for this functionality. For example, the following code would send the user directly to the Availity marketing site"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport AvLink from '@availity/link';\n\nconst Example = () => (\n  <AvLink href=\"https://www.availity.com\">My Application</AvLink>\n);\n"})}),"\n",(0,i.jsx)(n.h4,{id:"live-example",children:"Live example"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://availity.github.io/availity-react/storybook/?path=/story/bootstrap-components-link--with-absolute-url",children:"Storybook"})}),"\n",(0,i.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,i.jsx)(n.h4,{id:"href-string",children:(0,i.jsx)(n.code,{children:"href: string"})}),"\n",(0,i.jsx)(n.p,{children:"The url of the page the link goes to."}),"\n",(0,i.jsx)(n.h4,{id:"target-string",children:(0,i.jsx)(n.code,{children:"target?: string"})}),"\n",(0,i.jsx)(n.p,{children:"Where to open the linked document."}),"\n",(0,i.jsx)(n.h4,{id:"tag-reactcomponenttype--string",children:(0,i.jsx)(n.code,{children:"tag?: React.ComponentType | string"})}),"\n",(0,i.jsxs)(n.p,{children:["The tag to use in the link that gets rendered. ",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"<a>"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"onclick-event-event-url-string--void",children:(0,i.jsx)(n.code,{children:"onClick: (event: Event, url: string) => void"})}),"\n",(0,i.jsxs)(n.p,{children:["Function to run onClick of the link. The first argument passed to ",(0,i.jsx)(n.code,{children:"onClick"})," is the event. The second argument is the processed ",(0,i.jsx)(n.code,{children:"url"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"loadapp-boolean",children:(0,i.jsx)(n.code,{children:"loadApp?: boolean"})}),"\n",(0,i.jsxs)(n.p,{children:["When ",(0,i.jsx)(n.code,{children:"false"}),", the ",(0,i.jsx)(n.code,{children:"url"})," prop to ",(0,i.jsx)(n.code,{children:"AvLink"})," is ",(0,i.jsx)(n.em,{children:"not"})," formatted to leverage loadApp. ",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"true"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(6540);const i={},l=o.createContext(i);function r(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);