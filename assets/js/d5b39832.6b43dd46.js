"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[1675],{6085:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"bootstrap-components/spaces/agreement","title":"<SpacesAgreement />","description":"This component must be a descendent of the ` provider. Display the agreement for a given space id received from the ` provider.","source":"@site/docs/bootstrap-components/spaces/agreement.md","sourceDirName":"bootstrap-components/spaces","slug":"/bootstrap-components/spaces/agreement","permalink":"/availity-react/bootstrap-components/spaces/agreement","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/availity-react/edit/master/docusaurus/docs/bootstrap-components/spaces/agreement.md","tags":[],"version":"current","frontMatter":{"title":"<SpacesAgreement />"},"sidebar":"someSidebar","previous":{"title":"<SpacesDisclaimer />","permalink":"/availity-react/bootstrap-components/spaces/disclaimer"},"next":{"title":"<SpacesGhostText />","permalink":"/availity-react/bootstrap-components/spaces/ghost-text"}}');var o=s(4848),a=s(8453);const r={title:"<SpacesAgreement />"},c=void 0,i={},p=[{value:"Example",id:"example",level:3},{value:"Live example: <a> Storybook</a>",id:"live-example--storybook",level:4},{value:"Props",id:"props",level:3},{value:"<code>spaceId?: string</code>",id:"spaceid-string",level:4},{value:"<code>markdown?: boolean</code>",id:"markdown-boolean",level:4}];function d(e){const t={code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["This component must be a descendent of the ",(0,o.jsx)(t.code,{children:"<Spaces/>"})," provider. Display the agreement for a given space id received from the ",(0,o.jsx)(t.code,{children:"<Spaces />"})," provider."]}),"\n",(0,o.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"import React from 'react';\nimport Spaces, { SpacesAgreement } from '@availity/spaces';\n\nconst Example = () => (\n  <Spaces\n    spaceIds={['73162546201441126239486200007187']}\n    clientId=\"my-client-id\"\n  >\n    <SpacesAgreement markdown />\n  </Spaces>\n);\n"})}),"\n",(0,o.jsxs)(t.h4,{id:"live-example--storybook",children:["Live example: ",(0,o.jsx)("a",{href:"https://availity.github.io/availity-react/storybook/?path=/story/bootstrap-components-spaces--agreement",children:" Storybook"})]}),"\n",(0,o.jsx)(t.h3,{id:"props",children:"Props"}),"\n",(0,o.jsx)(t.h4,{id:"spaceid-string",children:(0,o.jsx)(t.code,{children:"spaceId?: string"})}),"\n",(0,o.jsxs)(t.p,{children:["The id of the space to render the agreement for. If no ",(0,o.jsx)(t.code,{children:"spaceId"})," is provided, the first space in the ",(0,o.jsx)(t.code,{children:"spaces"})," array is used. Note: This is only to be used when the Spaces provider should only ever contain a single space."]}),"\n",(0,o.jsx)(t.h4,{id:"markdown-boolean",children:(0,o.jsx)(t.code,{children:"markdown?: boolean"})}),"\n",(0,o.jsx)(t.p,{children:"Render the agreement as markdown."})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>c});var n=s(6540);const o={},a=n.createContext(o);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);