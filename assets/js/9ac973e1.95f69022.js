"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[2301],{2910:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>s});const l=JSON.parse('{"id":"form/components/checkbox","title":"<Checkbox />","description":"Inputs of type checkbox. Checkboxes should be wrapped in a CheckboxGroup.","source":"@site/docs/form/components/checkbox.md","sourceDirName":"form/components","slug":"/form/components/checkbox","permalink":"/availity-react/form/components/checkbox","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/availity-react/edit/master/docusaurus/docs/form/components/checkbox.md","tags":[],"version":"current","frontMatter":{"title":"<Checkbox />"},"sidebar":"someSidebar","previous":{"title":"<CheckboxGroup />","permalink":"/availity-react/form/components/checkbox-group"},"next":{"title":"<Feedback />","permalink":"/availity-react/form/components/feedback"}}');var c=n(4848),i=n(8453);const t={title:"<Checkbox />"},r=void 0,a={},s=[{value:"Example",id:"example",level:3},{value:"Live example: Storybook",id:"live-example-storybook",level:4},{value:"Props",id:"props",level:3},{value:"<code>id?: string</code>",id:"id-string",level:4},{value:"<code>groupName?: string</code>",id:"groupname-string",level:4},{value:"<code>label?: ReactNode</code>",id:"label-reactnode",level:4},{value:"<code>helpId?: string</code>",id:"helpid-string",level:4},{value:"<code>value?: string</code>",id:"value-string",level:4},{value:"<code>disabled?: boolean</code>",id:"disabled-boolean",level:4},{value:"<code>inline?: boolean</code>",id:"inline-boolean",level:4},{value:"<code>isHelpVideoType?: boolean</code>",id:"ishelpvideotype-boolean",level:4}];function d(e){const o={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(o.p,{children:"Inputs of type checkbox. Checkboxes should be wrapped in a CheckboxGroup."}),"\n",(0,c.jsx)(o.h3,{id:"example",children:"Example"}),"\n",(0,c.jsx)(o.pre,{children:(0,c.jsx)(o.code,{className:"language-jsx",children:'import React from \'react\';\nimport { Form, Checkbox, CheckboxGroup } from \'@availity/form\';\nimport { Button } from \'reactstrap\';\nimport * as yup from \'yup\';\n\nconst Example = () => (\n  <Form\n    initialValues={{\n      hello: [],\n    }}\n    onSubmit={() => {}}\n    validationSchema={yup.object().shape({\n      hello: yup.array().required(\'At least one checkbox is required\'),\n    })}\n  >\n    <CheckboxGroup name="hello" label="Checkbox Group">\n      <Checkbox groupName="hello" label="Check One" value="uno" />\n      <Checkbox groupName="hello" label="Check Two" value="dos" />\n      <Checkbox groupName="hello" label="Check Three" value="tres" />\n      <Checkbox\n        groupName="checkboxGroup"\n        label={<>Check Four</>}\n        value="cuatro"\n      />\n    </CheckboxGroup>\n    <Button type="submit" color="primary">\n      Submit\n    </Button>\n  </Form>\n);\n'})}),"\n",(0,c.jsxs)(o.h4,{id:"live-example-storybook",children:["Live example: ",(0,c.jsx)(o.a,{href:"https://availity.github.io/availity-react/storybook/?path=/docs/bootstrap-components-form-checkboxgroup--docs",children:"Storybook"})]}),"\n",(0,c.jsx)(o.h3,{id:"props",children:"Props"}),"\n",(0,c.jsx)(o.h4,{id:"id-string",children:(0,c.jsx)(o.code,{children:"id?: string"})}),"\n",(0,c.jsx)(o.p,{children:"Id and name for the checkbox."}),"\n",(0,c.jsx)(o.h4,{id:"groupname-string",children:(0,c.jsx)(o.code,{children:"groupName?: string"})}),"\n",(0,c.jsxs)(o.p,{children:["Should match ",(0,c.jsx)(o.code,{children:"<CheckboxGroup />"})," name to accessibly link input to form feedback."]}),"\n",(0,c.jsx)(o.h4,{id:"label-reactnode",children:(0,c.jsx)(o.code,{children:"label?: ReactNode"})}),"\n",(0,c.jsx)(o.p,{children:"Label for the checkbox."}),"\n",(0,c.jsx)(o.h4,{id:"helpid-string",children:(0,c.jsx)(o.code,{children:"helpId?: string"})}),"\n",(0,c.jsxs)(o.p,{children:["Help topic id, adds ",(0,c.jsx)(o.code,{children:"<FieldHelpIcon/>"})," next to the label (should not be within label for accessibility)."]}),"\n",(0,c.jsx)(o.h4,{id:"value-string",children:(0,c.jsx)(o.code,{children:"value?: string"})}),"\n",(0,c.jsx)(o.p,{children:"Value of the checkbox."}),"\n",(0,c.jsx)(o.h4,{id:"disabled-boolean",children:(0,c.jsx)(o.code,{children:"disabled?: boolean"})}),"\n",(0,c.jsx)(o.p,{children:"Disables the checkbox."}),"\n",(0,c.jsx)(o.h4,{id:"inline-boolean",children:(0,c.jsx)(o.code,{children:"inline?: boolean"})}),"\n",(0,c.jsxs)(o.p,{children:["Will render the checkbox inline with other checkboxes. ",(0,c.jsx)(o.strong,{children:"Default:"})," true."]}),"\n",(0,c.jsx)(o.h4,{id:"ishelpvideotype-boolean",children:(0,c.jsx)(o.code,{children:"isHelpVideoType?: boolean"})}),"\n",(0,c.jsxs)(o.p,{children:["Allows the type of ",(0,c.jsx)(o.code,{children:"<FieldHelpIcon/>"})," to be changed between help-icon and video-help"]})]})}function h(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,c.jsx)(o,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>t,x:()=>r});var l=n(6540);const c={},i=l.createContext(c);function t(e){const o=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:t(e.components),l.createElement(i.Provider,{value:o},e.children)}}}]);