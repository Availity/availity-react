"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[2966],{2375:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"bootstrap-components/badge","title":"Badge","description":"This library contains specialized Badges, utilizing Reactstrap Badge.","source":"@site/docs/bootstrap-components/badge.mdx","sourceDirName":"bootstrap-components","slug":"/bootstrap-components/badge","permalink":"/availity-react/bootstrap-components/badge","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/availity-react/edit/master/docusaurus/docs/bootstrap-components/badge.mdx","tags":[],"version":"current","frontMatter":{"title":"Badge"},"sidebar":"someSidebar","previous":{"title":"PaginationContext","permalink":"/availity-react/bootstrap-components/pagination/context"},"next":{"title":"Progress","permalink":"/availity-react/bootstrap-components/progress"}}');var n=t(4848),o=t(8453);const s={title:"Badge"},d=void 0,l={},r=[{value:"Installation",id:"installation",level:3},{value:"Removable Badge",id:"removable-badge",level:2},{value:"Example",id:"example",level:3},{value:"Live example",id:"live-example",level:4},{value:"<code>RemovableBadge</code> Props",id:"removablebadge-props",level:3},{value:"<code>value: string</code>",id:"value-string",level:4},{value:"<code>onRemove: (value: string) =&gt; void</code>",id:"onremove-value-string--void",level:4},{value:"Removable Badge List",id:"removable-badge-list",level:2},{value:"Example",id:"example-1",level:3},{value:"<code>RemovableBadgeList</code> Props",id:"removablebadgelist-props",level:3},{value:"<code>onRemove: (badges: BadgeItem[]) =&gt; void</code>",id:"onremove-badges-badgeitem--void",level:4},{value:"<code>BadgeItem</code> Props",id:"badgeitem-props",level:3},{value:"<code>value: string</code>",id:"value-string-1",level:4},{value:"<code>displayText: string</code>",id:"displaytext-string",level:4},{value:"<code>color: string</code>",id:"color-string",level:4},{value:"<code>order: number</code>",id:"order-number",level:4}];function c(e){const a={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.p,{children:"This library contains specialized Badges, utilizing Reactstrap Badge."}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.a,{href:"https://www.npmjs.com/package/@availity/badge",children:(0,n.jsx)(a.img,{src:"https://img.shields.io/npm/v/@availity/badge.svg?style=for-the-badge",alt:"Version"})})}),"\n",(0,n.jsx)(a.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(a.p,{children:"NPM"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"npm install @availity/badge reactstrap@^8.0.0\n"})}),"\n",(0,n.jsx)(a.p,{children:"Yarn"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"yarn add @availity/badge reactstrap@^8.0.0\n"})}),"\n",(0,n.jsx)(a.h2,{id:"removable-badge",children:"Removable Badge"}),"\n",(0,n.jsx)(a.h3,{id:"example",children:"Example"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-jsx",children:"import React from 'react';\nimport RemovableBadge from '@availity/badge';\n\nconst Example = () => (\n  <RemovableBadge\n    key={badge.value}\n    color={badge.color}\n    value={badge.value}\n    onRemove={remove}\n  >\n    {displayText}\n  </RemovableBadge>\n);\n"})}),"\n",(0,n.jsx)(a.h4,{id:"live-example",children:"Live example"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.a,{href:"https://availity.github.io/availity-react/storybook/?path=/story/bootstrap-components-badge-removable-badge--default",children:"Storybook"})}),"\n",(0,n.jsxs)(a.h3,{id:"removablebadge-props",children:[(0,n.jsx)(a.code,{children:"RemovableBadge"})," Props"]}),"\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"<RemovableBadge/>"})," contains all of the ",(0,n.jsx)(a.code,{children:"BadgeProp"})," from Reactstrap, in addition to the following."]}),"\n",(0,n.jsx)(a.h4,{id:"value-string",children:(0,n.jsx)(a.code,{children:"value: string"})}),"\n",(0,n.jsxs)(a.p,{children:["This is a unique value for the badge, which is passed up to the ",(0,n.jsx)(a.code,{children:"onRemove"})," function to describe which badge is being removed."]}),"\n",(0,n.jsx)(a.h4,{id:"onremove-value-string--void",children:(0,n.jsx)(a.code,{children:"onRemove: (value: string) => void"})}),"\n",(0,n.jsx)(a.p,{children:"This is the function that is called whenever the 'X' icon is clicked. It passes the value of the specified badge to the parent component."}),"\n",(0,n.jsx)(a.h2,{id:"removable-badge-list",children:"Removable Badge List"}),"\n",(0,n.jsx)(a.p,{children:"This component allows you to specify a list of badges and handles removing the badge from the badge list."}),"\n",(0,n.jsx)(a.h3,{id:"example-1",children:"Example"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-tsx",children:"import React from 'react';\nimport { RemovableBadgeList, BadgeItem } from '@availity/badge';\n\nconst Example = () => {\n  const defaultBadgeList: BadgeItem[] = [\n    { value: '1', color: 'primary', displayText: 'Test 1' },\n    { value: '2', color: 'success', displayText: 'Test 2' },\n    { value: '3', color: 'danger', displayText: 'Test 3' },\n    { value: '4', color: 'warning', displayText: 'Test 4' },\n    { value: '5', color: 'info', displayText: 'Test 5' },\n    { value: '6', color: 'light', displayText: 'Test 6' },\n    { value: '7', color: 'dark', displayText: 'Test 7' },\n    { value: '8', displayText: 'Test 9' },\n  ];\n  const [badgeList, setBadgeList] = useState<BadgeItem[]>(defaultBadgeList);\n\n  const remove = () => {\n    setBadgeList(defaultBadgeList);\n  };\n\n  const onRemoveBadge = (badgeList: BadgeItem[]) => {\n    setBadgeList(badgeList);\n  };\n\n  return <RemovableBadgeList badges={badgeList} onRemove={onRemoveBadge} />;\n};\n"})}),"\n",(0,n.jsxs)(a.h3,{id:"removablebadgelist-props",children:[(0,n.jsx)(a.code,{children:"RemovableBadgeList"})," Props"]}),"\n",(0,n.jsx)(a.h4,{id:"onremove-badges-badgeitem--void",children:(0,n.jsx)(a.code,{children:"onRemove: (badges: BadgeItem[]) => void"})}),"\n",(0,n.jsx)(a.p,{children:"This is the function that is called whenever a badge in the list has been removed. It passes in the current badge list, after the badge has been removed."}),"\n",(0,n.jsxs)(a.h3,{id:"badgeitem-props",children:[(0,n.jsx)(a.code,{children:"BadgeItem"})," Props"]}),"\n",(0,n.jsx)(a.h4,{id:"value-string-1",children:(0,n.jsx)(a.code,{children:"value: string"})}),"\n",(0,n.jsxs)(a.p,{children:["This is a unique value for the badge, which is passed up to the ",(0,n.jsx)(a.code,{children:"onRemove"})," function to describe which badge is being removed."]}),"\n",(0,n.jsx)(a.h4,{id:"displaytext-string",children:(0,n.jsx)(a.code,{children:"displayText: string"})}),"\n",(0,n.jsx)(a.p,{children:"This is the text that will be displayed in the badge."}),"\n",(0,n.jsx)(a.h4,{id:"color-string",children:(0,n.jsx)(a.code,{children:"color: string"})}),"\n",(0,n.jsx)(a.p,{children:"The color of the badge. Refer to the Reactstrap documentation to determine which colors are available."}),"\n",(0,n.jsx)(a.h4,{id:"order-number",children:(0,n.jsx)(a.code,{children:"order: number"})}),"\n",(0,n.jsx)(a.p,{children:"Optionally display the badges in a specified order."})]})}function h(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>s,x:()=>d});var i=t(6540);const n={},o=i.createContext(n);function s(e){const a=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),i.createElement(o.Provider,{value:a},e.children)}}}]);