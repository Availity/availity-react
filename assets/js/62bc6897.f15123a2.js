"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[764],{2493:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"form/select/components/region-select","title":"<AvRegionSelect />","description":"A select list that automatically loads and pages through regions when the user scrolls down.","source":"@site/docs/form/select/components/region-select.md","sourceDirName":"form/select/components","slug":"/form/select/components/region-select","permalink":"/availity-react/form/select/components/region-select","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/availity-react/edit/master/docusaurus/docs/form/select/components/region-select.md","tags":[],"version":"current","frontMatter":{"title":"<AvRegionSelect />"},"sidebar":"someSidebar","previous":{"title":"<ResourceSelect />","permalink":"/availity-react/form/select/components/resource-select"},"next":{"title":"<AvOrganizationSelect />","permalink":"/availity-react/form/select/components/organization-select"}}');var r=o(4848),s=o(8453);const i={title:"<AvRegionSelect />"},l=void 0,a={},c=[{value:"Example",id:"example",level:3},{value:"Live example: Storybook",id:"live-example-storybook",level:4},{value:"Props",id:"props",level:3},{value:"<code>defaultToCurrentRegion: boolean</code>",id:"defaulttocurrentregion-boolean",level:4}];function u(e){const t={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"A select list that automatically loads and pages through regions when the user scrolls down."}),"\n",(0,r.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:"import React from 'react';\nimport { Form } from '@availity/form';\nimport { AvRegionSelect } from '@availity/select';\nimport { Button } from 'reactstrap';\nimport * as yup from 'yup';\nimport '@availity/yup';\n\nconst Example = () => (\n  <Form\n    initialValues={{\n      region: '',\n    }}\n    onSubmit={(values) => apiResource.submit(values)}\n    validationSchema={yup.object().shape({\n      region: yup.string().isRequired('This field is required.'),\n    })}\n  >\n    <AvRegionSelect id=\"region\" name=\"region\" defaultToCurrentRegion />\n    <Button color=\"primary\" type=\"submit\">\n      Submit\n    </Button>\n  </Form>\n);\n"})}),"\n",(0,r.jsxs)(t.h4,{id:"live-example-storybook",children:["Live example: ",(0,r.jsx)(t.a,{href:"https://availity.github.io/availity-react/storybook/?path=/story/bootstrap-components-select-async-selects--region-select",children:"Storybook"})]}),"\n",(0,r.jsx)(t.h3,{id:"props",children:"Props"}),"\n",(0,r.jsxs)(t.p,{children:["Extends ",(0,r.jsx)(t.a,{href:"/form/select/components/resource-select/#props",children:"ResourceSelect Props"}),"."]}),"\n",(0,r.jsx)(t.h4,{id:"defaulttocurrentregion-boolean",children:(0,r.jsx)(t.code,{children:"defaultToCurrentRegion: boolean"})}),"\n",(0,r.jsxs)(t.p,{children:["When ",(0,r.jsx)(t.code,{children:"true"}),", the input will be defaulted to the user's currently selected region. Defaults to ",(0,r.jsx)(t.code,{children:"false"})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>l});var n=o(6540);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);