"use strict";(self.webpackChunk_availity_availity_react=self.webpackChunk_availity_availity_react||[]).push([[1566],{"./node_modules/@availity/message-core/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>index_default});var _lastId,__defProp=Object.defineProperty,__typeError=msg=>{throw TypeError(msg)},__publicField=(obj,key,value)=>((obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value)(obj,"symbol"!=typeof key?key+"":key,value),__accessCheck=(obj,member,msg)=>member.has(obj)||__typeError("Cannot "+msg),__privateGet=(obj,member,getter)=>(__accessCheck(obj,member,"read from private field"),getter?getter.call(obj):member.get(obj));_lastId=new WeakMap;var index_default=new class{constructor(){var obj,member,value;__publicField(this,"subscribers",{}),__publicField(this,"getEventData",(event=>{const isSameWindow=event.source===window;if(!(this.isEnabled&&event&&event.data&&event.origin&&event.source&&this.isDomain(event.origin)))return;let{data}=event;if("string"==typeof data)try{data=JSON.parse(data)}catch(e){}"string"==typeof data?(event=data,data=void 0):event=data&&data.event||this.DEFAULT_EVENT;const metadata={isSameWindow};this.onMessage(event,data,metadata)})),obj=this,value=0,(member=_lastId).has(obj)?__typeError("Cannot add the same private member more than once"):member instanceof WeakSet?member.add(obj):member.set(obj,value),this.isEnabled=!0,this.DEFAULT_EVENT="avMessage",this.DOMAIN=/https?:\/\/([\w-]+\.)?availity\.(com|net)/,window.addEventListener("message",this.getEventData)}enabled(value){return arguments.length>0&&(this.isEnabled=!!value),this.isEnabled}subscribe(event,callback,options){var _a,obj,member,value,setter;this.subscribers[event]||(this.subscribers[event]=[]),obj=this,member=_lastId,value=__privateGet(this,_lastId)+1,__accessCheck(obj,member,"write to private field"),setter?setter.call(obj,value):member.set(obj,value);const id=__privateGet(this,_lastId),ignoreSameWindow=null==(_a=null==options?void 0:options.ignoreSameWindow)||_a,subscriber={id,callback,options:{ignoreSameWindow}};return this.subscribers[event].push(subscriber),()=>{this.subscribers[event]=this.subscribers[event].filter((subscriber2=>subscriber2.id!==id))}}unsubscribe(event){delete this.subscribers[event]}unsubscribeAll(){this.subscribers={}}onMessage(event,data,metadata){const{isSameWindow}=metadata;if(this.subscribers[event])for(const subscriber of this.subscribers[event]){const{ignoreSameWindow}=subscriber.options;isSameWindow&&ignoreSameWindow||subscriber.callback(data)}}isDomain(url){return!this.DOMAIN.test(this.domain())||this.DOMAIN.test(url)}getOriginFromTop(){try{return window.top.location.origin}catch(e){return null}}swapDomain(url){return url.includes("essentials")?url.replace("essentials","apps"):url.replace("apps","essentials")}domain(){const topOrigin=this.getOriginFromTop();if(topOrigin)return topOrigin;if(window.location.origin){const url=window.location.origin;return this.swapDomain(url)}if(window.location.hostname){const url=`${window.location.protocol}//${window.location.hostname}${window.location.port?`:${window.location.port}`:""}`;return this.swapDomain(url)}return"*"}send(payload,target=window.top){if(this.isEnabled&&payload)try{const message="string"==typeof payload?payload:JSON.stringify(payload);target.postMessage(message,this.domain())}catch(error){console.warn("AvMessage.send()",error)}}}},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./packages/form-upload/styles.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".file-drop{color:#464a4c;text-align:center;border:1px dashed rgba(0,0,0,.15);width:8rem;min-width:fit-content;height:8rem;padding:3rem 0}.file-drop-active{border:1px solid #3960ed;border-width:2px;background-color:#ebebeb;border-radius:5px}","",{version:3,sources:["webpack://./packages/form-upload/styles.scss"],names:[],mappings:"AAAA,WACE,aAAA,CACA,iBAAA,CACA,iCAAA,CACA,UAAA,CACA,qBAAA,CACA,WAAA,CACA,cAAA,CAGF,kBACE,wBAAA,CACA,gBAAA,CACA,wBAAA,CACA,iBAAA",sourcesContent:[".file-drop {\n  color: #464a4c;\n  text-align: center;\n  border: 1px dashed rgba(0, 0, 0, .15);\n  width: 8rem;\n  min-width: fit-content;\n  height: 8rem;\n  padding: 3rem 0;\n}\n\n.file-drop-active {\n  border: 1px solid #3960ed;\n  border-width: 2px;\n  background-color: #ebebeb;\n  border-radius: 5px;\n}"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./packages/form-upload/src/Upload.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,FileListStory:()=>FileListStory,FilePickerBtnStory:()=>FilePickerBtnStory,FilePickerStory:()=>FilePickerStory,UploadProgressBarStory:()=>UploadProgressBarStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Upload_stories,hidden_FileList:()=>hidden_FileList,hidden_FilePicker:()=>hidden_FilePicker,hidden_FilePickerBtn:()=>hidden_FilePickerBtn,hidden_UploadProgressBar:()=>hidden_UploadProgressBar});var react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./packages/form/dist/index.js"),CustomInput=__webpack_require__("./node_modules/reactstrap/es/CustomInput.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),upload_core_dist=__webpack_require__("./node_modules/@availity/upload-core/dist/index.mjs"),api_axios_dist=__webpack_require__("./node_modules/@availity/api-axios/dist/index.mjs"),Input=__webpack_require__("./node_modules/reactstrap/es/Input.js"),InputGroup=__webpack_require__("./node_modules/reactstrap/es/InputGroup.js"),icon_dist=__webpack_require__("./packages/icon/dist/index.js"),icon_dist_default=__webpack_require__.n(icon_dist),formik_esm=__webpack_require__("./node_modules/formik/dist/formik.esm.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),Button=__webpack_require__("./node_modules/reactstrap/es/Button.js"),hooks=__webpack_require__("./packages/hooks/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");let id=0;const FilePicker=_ref=>{let{name,tag:Tag=CustomInput.A,maxSize,allowedFileTypes,children,onChange:onChangeCallback,className,...rest}=_ref;const[stateId,setStateId]=(0,react.useState)(),{setFieldValue}=(0,formik_esm.useFormikContext)(),[field]=(0,formik_esm.useField)(name),fieldValue=Array.isArray(field.value)?field.value:[];(0,hooks.JO)((()=>{setStateId(`filePicker-${id+=1}`)}));const reset=()=>{setFieldValue(name,null,!0)},file=rest.multiple?fieldValue:fieldValue[0];return rest.id=rest.id||name||stateId,children&&name&&file&&(!rest.multiple||file.length>0)?children({file,clear:reset,reset}):(0,jsx_runtime.jsx)(Tag,{value:"",type:"file",accept:Array.isArray(allowedFileTypes)&&allowedFileTypes.length>0?allowedFileTypes.join(","):void 0,size:maxSize?maxSize.toString():void 0,...rest,onChange:event=>{const{files}=event.target,value=[];for(let i=0;i<files.length;i++)value[i]=files[i];onChangeCallback&&onChangeCallback(event)}})};FilePicker.propTypes={name:prop_types_default().string.isRequired,tag:prop_types_default().oneOfType([prop_types_default().func,prop_types_default().string]),onChange:prop_types_default().func,multiple:prop_types_default().bool,children:prop_types_default().func,allowedFileTypes:prop_types_default().arrayOf(prop_types_default().string),maxSize:prop_types_default().oneOfType([prop_types_default().number,prop_types_default().string]),className:prop_types_default().string};const src_FilePicker=FilePicker;FilePicker.__docgenInfo={description:"",methods:[],displayName:"FilePicker",props:{tag:{defaultValue:{value:"CustomInput",computed:!0},description:"The raw underlying component/element that should be rendered.",type:{name:"union",value:[{name:"func"},{name:"string"}]},required:!1},name:{description:"Identifies the field and matches the validation schema.",type:{name:"string"},required:!0},onChange:{description:"Callback when the user has selected a file or multiple files.",type:{name:"func"},required:!1},multiple:{description:"Indicates that the user will be allowed to select multiple files when selecting files from the OS prompt.",type:{name:"bool"},required:!1},children:{description:"",type:{name:"func"},required:!1},allowedFileTypes:{description:"The file types you want to restrict uploading to. eg: ['.jpeg', '.jpg'].",type:{name:"arrayOf",value:{name:"string"}},required:!1},maxSize:{description:"The maximum file size (in bytes) for a file to be uploaded.",type:{name:"union",value:[{name:"number"},{name:"string"}]},required:!1},className:{description:"",type:{name:"string"},required:!1}}};const FilePickerBtn=_ref=>{let{onClick,onChange,multiple,name,allowedFileTypes,maxSize,"data-testid":testId,color="primary",children="Select File",...rest}=_ref;const input=(0,react.useRef)(null);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{className:"d-none",children:(0,jsx_runtime.jsx)(src_FilePicker,{tag:Input.A,innerRef:input,onChange,multiple,name,allowedFileTypes,maxSize,"data-testid":testId})}),(0,jsx_runtime.jsx)(Button.A,{color,...rest,onClick:function(){input.current&&input.current.click(),onClick&&onClick(...arguments)},children})]})};FilePickerBtn.propTypes={onClick:prop_types_default().func,onChange:prop_types_default().func,multiple:prop_types_default().bool,name:prop_types_default().string.isRequired,color:prop_types_default().string,children:prop_types_default().node,allowedFileTypes:prop_types_default().arrayOf(prop_types_default().string),maxSize:prop_types_default().number,"data-testid":prop_types_default().string};const src_FilePickerBtn=FilePickerBtn;FilePickerBtn.__docgenInfo={description:"",methods:[],displayName:"FilePickerBtn",props:{color:{defaultValue:{value:"'primary'",computed:!1},description:"",type:{name:"string"},required:!1},children:{defaultValue:{value:"'Select File'",computed:!1},description:"",type:{name:"node"},required:!1},onClick:{description:"Callback when the button is clicked.",type:{name:"func"},required:!1},onChange:{description:"Callback when the user has selected a file or multiple files.",type:{name:"func"},required:!1},multiple:{description:"Indicates that the user will be allowed to select multiple files when selecting files from the OS prompt.",type:{name:"bool"},required:!1},name:{description:"Identifies the field and matches the validation schema.",type:{name:"string"},required:!0},allowedFileTypes:{description:"The file types you want to restrict uploading to. eg: ['.jpeg', '.jpg'].",type:{name:"arrayOf",value:{name:"string"}},required:!1},maxSize:{description:"The maximum file size (in bytes) for a file to be uploaded.",type:{name:"number"},required:!1},"data-testid":{description:"",type:{name:"string"},required:!1}}};var Table=__webpack_require__("./node_modules/reactstrap/es/Table.js"),progress_dist=__webpack_require__("./packages/progress/dist/index.js"),progress_dist_default=__webpack_require__.n(progress_dist),Modal=__webpack_require__("./node_modules/reactstrap/es/Modal.js"),ModalHeader=__webpack_require__("./node_modules/reactstrap/es/ModalHeader.js"),ModalBody=__webpack_require__("./node_modules/reactstrap/es/ModalBody.js"),Label=__webpack_require__("./node_modules/reactstrap/es/Label.js"),ModalFooter=__webpack_require__("./node_modules/reactstrap/es/ModalFooter.js");const UploadProgressBar=_ref=>{let{upload,...rest}=_ref;const[statePercentage,setStatePercentage]=(0,react.useState)(upload.percentage||0),[password,setPassword]=(0,react.useState)(""),[error,setError]=(0,react.useState)(null),[modalOpen,setModalOpen]=(0,react.useState)(!1),toggleModal=()=>{setModalOpen(!modalOpen),setPassword("")};return upload.onProgress.push((()=>{setStatePercentage(upload.percentage),setError(!1),rest.onProgress&&rest.onProgress(upload)})),upload.onSuccess.push((()=>{setStatePercentage(100),setError(!1),rest.onSuccess&&rest.onSuccess(upload)})),upload.onError.push((()=>{setError(!0),rest.onError&&rest.onError(upload)})),upload.errorMessage?(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("span",{"data-testid":"upload-error-message",className:"text-danger",children:upload.errorMessage}),"encrypted"===upload.status&&(0,jsx_runtime.jsxs)("div",{className:"pwRequired","data-testid":"password-form-encrypted",children:[(0,jsx_runtime.jsx)(Button.A,{size:"sm",color:"primary",onClick:toggleModal,children:"Enter password"}),(0,jsx_runtime.jsx)(Modal.A,{isOpen:modalOpen,toggle:toggleModal,children:(0,jsx_runtime.jsxs)("form",{onSubmit:event=>{event.preventDefault(),event.stopPropagation(),upload.sendPassword(password),toggleModal()},"data-testid":"password-form-modal",children:[(0,jsx_runtime.jsx)(ModalHeader.A,{toggle:toggleModal,children:"Enter Password"}),(0,jsx_runtime.jsxs)(ModalBody.A,{children:[(0,jsx_runtime.jsx)(Label.A,{for:"upload-password",children:"Password"}),(0,jsx_runtime.jsx)(Input.A,{id:"upload-password",onChange:event=>{setPassword(event.target.value)},type:"password",placeholder:"password"})]}),(0,jsx_runtime.jsx)(ModalFooter.A,{children:(0,jsx_runtime.jsx)(Button.A,{color:"primary",children:"Ok"})})]})})]})]}):(0,jsx_runtime.jsx)(progress_dist_default(),{"data-testid":"upload-progress",value:statePercentage,complete:100===statePercentage,color:error?"danger":"success",...rest,children:(0,jsx_runtime.jsxs)("span",{className:"sr-only",children:[statePercentage,"% Complete"]})})};UploadProgressBar.propTypes={upload:prop_types_default().shape({sendPassword:prop_types_default().func.isRequired,onProgress:prop_types_default().array.isRequired,onSuccess:prop_types_default().array.isRequired,onError:prop_types_default().array.isRequired,percentage:prop_types_default().number,errorMessage:prop_types_default().string,id:prop_types_default().string.isRequired,status:prop_types_default().string}).isRequired,onProgress:prop_types_default().func,onSuccess:prop_types_default().func,onError:prop_types_default().func,animated:prop_types_default().bool,className:prop_types_default().string,striped:prop_types_default().bool};const src_UploadProgressBar=UploadProgressBar;UploadProgressBar.__docgenInfo={description:"",methods:[],displayName:"UploadProgressBar",props:{upload:{description:"The upload instance returned by creating a new Upload via upload-core.",type:{name:"shape",value:{sendPassword:{name:"func",required:!0},onProgress:{name:"array",required:!0},onSuccess:{name:"array",required:!0},onError:{name:"array",required:!0},percentage:{name:"number",required:!1},errorMessage:{name:"string",required:!1},id:{name:"string",required:!0},status:{name:"string",required:!1}}},required:!0},onProgress:{description:"Callback function to hook into the onProgress within the Upload instance provided in the upload prop.",type:{name:"func"},required:!1},onSuccess:{description:"Callback function to hook into the onSuccess within the Upload instance provided in the upload prop.",type:{name:"func"},required:!1},onError:{description:"Callback function to hook into the onError within the Upload instance provided in the upload prop.",type:{name:"func"},required:!1},animated:{description:"When true the progress bar has animated stripes while uploading is in progress.",type:{name:"bool"},required:!1},className:{description:"",type:{name:"string"},required:!1},striped:{description:'Triggers the "striped" style in the progress bar.',type:{name:"bool"},required:!1}}};const fileTypeIconMap={png:"file-image",jpg:"file-image",jpeg:"file-image",gif:"file-image",ppt:"file-powerpoint",pptx:"file-powerpoint",xls:"file-excel",xlsx:"file-excel",doc:"file-word",docx:"file-word",txt:"doc-alt",text:"doc-alt",zip:"file-archive","7zip":"file-archive",xml:"file-code",html:"file-code",pdf:"file-pdf"},FileRow=_ref=>{let{onRemove,children,file,index}=_ref;const remove=()=>{onRemove(file.id,index)},progressBar=()=>(0,jsx_runtime.jsx)(src_UploadProgressBar,{upload:file}),ext=file.file.name.split(".").pop().toUpperCase(),icon=fileTypeIconMap[ext.toLowerCase()]||"doc";return"function"==typeof children?children({file,metadata:file.options.metadata,name:file.file.name,remove,ext,icon,progressBar}):(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsxs)("td",{className:"align-middle",style:{width:"10%"},children:[(0,jsx_runtime.jsx)(icon_dist_default(),{name:icon,title:`${ext} File Icon`,children:(0,jsx_runtime.jsxs)("span",{className:"sr-only",children:[ext," File Icon"]})})," "]}),(0,jsx_runtime.jsx)("td",{className:"align-middle",style:{width:"35%"},children:(0,jsx_runtime.jsx)("div",{className:"text-truncate",title:file.file.name,children:file.file.name})}),(0,jsx_runtime.jsx)("td",{className:"align-middle",style:{width:"45%"},children:(0,jsx_runtime.jsx)(src_UploadProgressBar,{upload:file,"aria-label":`${file.file.name} upload`})}),(0,jsx_runtime.jsx)("td",{className:"align-middle",style:{width:"10%"},children:(0,jsx_runtime.jsxs)(Button.A,{"data-testid":"remove-file-btn",color:"link",className:"text-danger px-0",onClick:remove,children:[(0,jsx_runtime.jsx)(icon_dist_default(),{name:"trash-empty"}),(0,jsx_runtime.jsxs)("span",{className:"sr-only",children:["Remove ",file.file.name]})]})})]})};FileRow.displayName="FileRow",FileRow.propTypes={onRemove:prop_types_default().func.isRequired,children:prop_types_default().func,file:prop_types_default().shape({id:prop_types_default().string.isRequired,file:prop_types_default().shape({name:prop_types_default().string.isRequired}).isRequired,options:prop_types_default().object}),index:prop_types_default().number};const src_FileRow=FileRow;FileRow.__docgenInfo={description:"",methods:[],displayName:"FileRow",props:{onRemove:{description:"",type:{name:"func"},required:!0},children:{description:"",type:{name:"func"},required:!1},file:{description:"",type:{name:"shape",value:{id:{name:"string",required:!0},file:{name:"shape",value:{name:{name:"string",required:!0}},required:!0},options:{name:"object",required:!1}}},required:!1},index:{description:"",type:{name:"number"},required:!1}}};const FileList=_ref=>{let{files,children,onRemoveFile,...rest}=_ref;const list=(0,react.useMemo)((()=>files.map(((file,index)=>(0,jsx_runtime.jsx)(src_FileRow,{file,onRemove:onRemoveFile,index,children},file.id)))),[files,children,onRemoveFile]);return"function"==typeof children?list:files.length>0?(0,jsx_runtime.jsxs)(Table.A,{size:"sm",hover:!0,style:{tableLayout:"fixed"},...rest,children:[(0,jsx_runtime.jsx)("caption",{className:"sr-only",children:"List of files uploaded"}),(0,jsx_runtime.jsx)("thead",{children:(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("th",{style:{width:"10%",border:0},scope:"col",children:(0,jsx_runtime.jsx)("span",{className:"sr-only",children:"File Icon"})}),(0,jsx_runtime.jsx)("th",{style:{width:"35%",border:0},scope:"col",children:(0,jsx_runtime.jsx)("span",{className:"sr-only",children:"File Name"})}),(0,jsx_runtime.jsx)("th",{style:{width:"45%",border:0},scope:"col",children:(0,jsx_runtime.jsx)("span",{className:"sr-only",children:"Upload Progress"})}),(0,jsx_runtime.jsx)("th",{style:{width:"10%",border:0},scope:"col",children:(0,jsx_runtime.jsx)("span",{className:"sr-only",children:"File Actions"})})]})}),(0,jsx_runtime.jsx)("tbody",{className:"w-100",children:list})]}):null};FileList.propTypes={files:prop_types_default().array,children:prop_types_default().func,onRemoveFile:prop_types_default().func};const src_FileList=FileList;FileList.__docgenInfo={description:"",methods:[],displayName:"FileList",props:{files:{description:"List of removable files with upload statuses.",type:{name:"array"},required:!1},children:{description:"",type:{name:"func"},required:!1},onRemoveFile:{description:"Callback called when file is removed. The callback is provided two arguments. 1. the updated files and 2. the id of the file that was removed.",type:{name:"func"},required:!1}}};var injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styles=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./packages/form-upload/styles.scss"),options={insert:"head",singleton:!1};injectStylesIntoStyleTag_default()(styles.A,options);styles.A.locals;const Dropzone=react.lazy((()=>__webpack_require__.e(7853).then(__webpack_require__.bind(__webpack_require__,"./node_modules/react-dropzone/dist/es/index.js")))),dropzoneFallback=(0,jsx_runtime.jsx)("div",{"data-testid":"dropzone-fallback",children:"Loading..."}),Upload=_ref=>{let{allowedFileNameCharacters,allowedFileTypes,btnColor="light",btnText,bucketId,children,className,clientId,customerId,deliverFileOnSubmit=!1,deliveryChannel,endpoint,onDeliverySuccess,onDeliveryError,disabled=!1,feedbackClass,fileDeliveryMetadata,getDropRejectionMessage,max,maxSize,totalMaxSize,multiple=!0,name,onFileRemove,onFilePreUpload=[],onFileUpload,showFileDrop=!1,fallback=dropzoneFallback,isCloud,customHeaders}=_ref;const[field,metadata]=(0,formik_esm.useField)(name),{errors,isSubmitting,isValidating,setFieldError,setFieldValue,setFieldTouched}=(0,formik_esm.useFormikContext)(),classes=classnames_default()(className,metadata.touched?"is-touched":"is-untouched",metadata.touched&&metadata.error&&"is-invalid"),[totalSize,setTotalSize]=(0,react.useState)(0),fieldValue=(0,react.useMemo)((()=>Array.isArray(field.value)?field.value:[]),[field]),callFileDelivery=(0,react.useCallback)((async upload=>{Array.isArray(upload)||(upload=[upload]);const uploadResults=[];try{for(const u of upload){const data={deliveries:[{deliveryChannel,fileURI:isCloud?u.s3References[0]:u.references[0],metadata:"function"==typeof fileDeliveryMetadata?fileDeliveryMetadata(u):fileDeliveryMetadata}]};isCloud?uploadResults.push(api_axios_dist.hZ.uploadFilesDelivery(data,{path:"",name:"/cloud/web/appl/file-upload-delivery/v1/batch/deliveries",clientId,customerId})):uploadResults.push(api_axios_dist.hZ.uploadFilesDelivery(data,{clientId,customerId}))}const responses=await Promise.all(uploadResults);"function"==typeof onDeliverySuccess&&onDeliverySuccess(responses)}catch(error){setFieldError(name,"An error occurred while uploading files."),"function"==typeof onDeliveryError&&onDeliveryError(error)}}),[clientId,customerId,deliveryChannel,fileDeliveryMetadata,name,setFieldError,onDeliverySuccess,onDeliveryError,isCloud]);(0,react.useEffect)((()=>{!onFileUpload&&!0===isSubmitting&&!1===isValidating&&deliverFileOnSubmit&&deliveryChannel&&fileDeliveryMetadata&&async function checkValidFormAndCallFileDelivery(){0===Object.keys(errors).length&&await callFileDelivery(fieldValue)}()}),[callFileDelivery,deliverFileOnSubmit,deliveryChannel,errors,fieldValue,fileDeliveryMetadata,isSubmitting,isValidating,onFileUpload]);const validator=(0,react.useCallback)((file=>fieldValue.some((prev=>prev.file.name===file.name))?{code:"duplicate-name",message:"A file with this name already exists"}:null),[fieldValue]),setFiles=async files=>{let selectedFiles=[];for(let i=0;i<files.length;i++)selectedFiles[i]=files[i];max&&selectedFiles.length+fieldValue.length>max&&(selectedFiles=selectedFiles.slice(0,Math.max(0,max-fieldValue.length)));const uploads=[...fieldValue],options={bucketId,customerId,clientId,onPreStart:onFilePreUpload,fileTypes:allowedFileTypes,maxSize,allowedFileNameCharacters};isCloud&&(options.endpoint="/cloud/web/appl/vault/upload/v1/resumable"),endpoint&&(options.endpoint=endpoint);let newTotalSize=0;for await(const file of selectedFiles){options.headers="function"==typeof customHeaders?customHeaders(file):customHeaders;const upload=new upload_core_dist.A(file,options);await upload.generateId();const validationResult=validator(file);file.dropRejectionMessage?upload.errorMessage=file.dropRejectionMessage:totalMaxSize&&totalSize+newTotalSize+upload.file.size>totalMaxSize?upload.errorMessage="Total documents size is too large":validationResult?upload.errorMessage=validationResult.message:(upload.start(),newTotalSize+=upload.file.size),onFileUpload?onFileUpload(upload):deliveryChannel&&fileDeliveryMetadata&&upload.onSuccess.push((()=>{upload?.references?.[0]&&(setFieldTouched(name,!0),deliverFileOnSubmit||callFileDelivery(upload))})),uploads.push(upload)}setTotalSize(totalSize+newTotalSize),await setFieldValue(name,uploads,!0)},handleFileInputChange=async event=>{event.stopPropagation(),await setFiles(event.target.files)},onDrop=async(acceptedFiles,fileRejections)=>{const rejectedFilesToDrop=fileRejections.map((_ref2=>{let{file,errors}=_ref2;const dropRejectionMessage=getDropRejectionMessage?getDropRejectionMessage(errors,file):errors.map((error=>error.message)).join(", ");return file.dropRejectionMessage=dropRejectionMessage,file}));await setFiles([...acceptedFiles,...rejectedFilesToDrop])};let fileAddArea;const text=btnText||(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(icon_dist_default(),{name:"plus-circle",title:"Add File Icon"}),0===fieldValue.length?"Add File":"Add Another File Attachment"]});return(!max||fieldValue.length<max)&&(fileAddArea=showFileDrop?(0,jsx_runtime.jsxs)(dist.FormGroup,{for:name,children:[(0,jsx_runtime.jsx)(Input.A,{name,style:{display:"none"}}),(0,jsx_runtime.jsx)(InputGroup.A,{disabled,className:classes,children:(0,jsx_runtime.jsx)(react.Suspense,{fallback,children:(0,jsx_runtime.jsx)(Dropzone,{onDrop,multiple,maxSize,accept:allowedFileTypes,validator,children:_ref3=>{let{getRootProps,getInputProps,isDragActive}=_ref3;return(0,jsx_runtime.jsx)("section",{children:(0,jsx_runtime.jsxs)("div",{...getRootProps({className:isDragActive?"file-drop-active":"file-drop"}),children:[(0,jsx_runtime.jsx)("input",{"data-testid":"file-picker",...getInputProps()}),(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsx)("strong",{children:"Drag and Drop"})}),text]})})}})})}),(0,jsx_runtime.jsx)(dist.Feedback,{className:classnames_default()("d-block",feedbackClass),name})]}):(0,jsx_runtime.jsx)(src_FilePickerBtn,{"data-testid":"file-picker",onChange:handleFileInputChange,color:0===fieldValue.length?btnColor:"link",multiple,allowedFileTypes,maxSize,name,disabled,children:text})),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(src_FileList,{files:fieldValue,onRemoveFile:(fileId,fileIndex)=>{const newFiles=fieldValue.filter(((file,index)=>file.id!==fileId||index!==fileIndex));if(newFiles.length!==fieldValue.length){setFieldValue(name,newFiles,!0);const removedFile=fieldValue.find((file=>file.id===fileId));removedFile.error||removedFile.errorMessage||setTotalSize(totalSize-removedFile.file.size),onFileRemove&&onFileRemove(newFiles,fileId)}},"data-testid":"file-list",children}),fileAddArea]})};Upload.propTypes={bucketId:prop_types_default().string.isRequired,clientId:prop_types_default().string.isRequired,customerId:prop_types_default().string.isRequired,name:prop_types_default().string.isRequired,allowedFileNameCharacters:prop_types_default().string,allowedFileTypes:prop_types_default().arrayOf(prop_types_default().string),btnColor:prop_types_default().string,btnText:prop_types_default().node,children:prop_types_default().func,className:prop_types_default().string,deliverFileOnSubmit:prop_types_default().bool,deliveryChannel:prop_types_default().string,disabled:prop_types_default().bool,fallback:prop_types_default().node,feedbackClass:prop_types_default().string,fileDeliveryMetadata:prop_types_default().oneOfType([prop_types_default().object,prop_types_default().func]),getDropRejectionMessage:prop_types_default().func,isCloud:prop_types_default().bool,endpoint:prop_types_default().string,max:prop_types_default().number,maxSize:prop_types_default().number,totalMaxSize:prop_types_default().number,multiple:prop_types_default().bool,onDeliveryError:prop_types_default().func,onDeliverySuccess:prop_types_default().func,onFilePreUpload:prop_types_default().arrayOf(prop_types_default().func),onFileRemove:prop_types_default().func,onFileUpload:prop_types_default().func,showFileDrop:prop_types_default().bool,customHeaders:prop_types_default().oneOfType([prop_types_default().object,prop_types_default().func])};const src_Upload=Upload;Upload.__docgenInfo={description:"",methods:[],displayName:"Upload",props:{btnColor:{defaultValue:{value:"'light'",computed:!1},description:"The color of the button. Refer to the Reactstrap documentation to determine which colors are available.",type:{name:"string"},required:!1},deliverFileOnSubmit:{defaultValue:{value:"false",computed:!1},description:"This prop is used in tandem with deliveryChannel and fileDeliveryMetadata so that your files will only get delivered to fileDeliveryApi when the form is being submitted. When false, the files are delivered as the user adds them.",type:{name:"bool"},required:!1},disabled:{defaultValue:{value:"false",computed:!1},description:"Disable the file input.",type:{name:"bool"},required:!1},multiple:{defaultValue:{value:"true",computed:!1},description:"Indicates that the user will be allowed to select multiple files when selecting files from the OS prompt.",type:{name:"bool"},required:!1},onFilePreUpload:{defaultValue:{value:"[]",computed:!1},description:"",type:{name:"arrayOf",value:{name:"func"}},required:!1},showFileDrop:{defaultValue:{value:"false",computed:!1},description:"Set as true to show a drag and drop file upload option instead of a button (file explorer still available on click).",type:{name:"bool"},required:!1},fallback:{defaultValue:{value:'<div data-testid="dropzone-fallback">Loading...</div>',computed:!1},description:"A custom fallback element to render while Dropzone is being imported from 'react-dropzone. Since Dropzone is only used when showFileDrop is true, it is imported using lazy loading and suspense to cut down on the bundle size the client needs to initially download.",type:{name:"node"},required:!1},bucketId:{description:"The ID of the bucket you want to upload to.",type:{name:"string"},required:!0},clientId:{description:"The ID obtained from APIConnect. Must be subscribed to the resumeable uploads API.",type:{name:"string"},required:!0},customerId:{description:"The customer ID for the organization the user is uploading on behalf of.",type:{name:"string"},required:!0},name:{description:"Identifies the field and matches the validation schema.",type:{name:"string"},required:!0},allowedFileNameCharacters:{description:"Restrict the file name characters to a regex set.",type:{name:"string"},required:!1},allowedFileTypes:{description:"Restrict the file types allowed to be uploaded to. eg: ['.jpeg', '.jpg'].",type:{name:"arrayOf",value:{name:"string"}},required:!1},btnText:{description:"+ Add File for initial file or + Add Another File Attachment if an attachment already have been selected. | The text that appears on the button.",type:{name:"node"},required:!1},children:{description:"",type:{name:"func"},required:!1},className:{description:"",type:{name:"string"},required:!1},deliveryChannel:{description:"The name of the delivery channel that is unique to where you will deliver files via the avFileDeliveryApi.",type:{name:"string"},required:!1},feedbackClass:{description:"",type:{name:"string"},required:!1},fileDeliveryMetadata:{description:"The metadata properties that have been configured for the delivery channel you are trying to reach with avFilesDeliveryApi.",type:{name:"union",value:[{name:"object"},{name:"func"}]},required:!1},getDropRejectionMessage:{description:"Override the default error message for files rejected when showFileDrop is true.",type:{name:"func"},required:!1},isCloud:{description:"Set if the component is being used in the cloud. This will override the URL being used.",type:{name:"bool"},required:!1},endpoint:{description:"Override the endpoint used for uploading the file(s)",type:{name:"string"},required:!1},max:{description:"The maximum number of files allowed to be uploaded. 0 (or a falsey value) means unlimited. When the max number has been reached, the add button will disappear.",type:{name:"number"},required:!1},maxSize:{description:"The maximum file size (in bytes) for a file to be uploaded.",type:{name:"number"},required:!1},totalMaxSize:{description:"The total maximum combined file size (in bytes) for all the files to be uploaded.",type:{name:"number"},required:!1},onDeliveryError:{description:"Callback to be executed when the delivery API call(s) have failed. It is called with the error that was thrown.",type:{name:"func"},required:!1},onDeliverySuccess:{description:"Callback to be executed when the delivery API call(s) have completed. It is called with an array of API responses (array of one if a single call was made). Note: a delivery can be REJECTED/FAILED/etc when the success callback is called - make sure to check the deliveryStatus for accurate handling.",type:{name:"func"},required:!1},onFileRemove:{description:"Callback called when file is removed. The callback is provided two arguments. 1. the updated files and 2. the id of the file that was removed.",type:{name:"func"},required:!1},onFileUpload:{description:"Callback to be executed when file is uploaded. The callback is provided the Upload instance from upload-core SDK. Use this callback to hook into the upload.onSuccess and upload.onError events and track which files have been uploaded and get references returned by the API if needed.",type:{name:"func"},required:!1},customHeaders:{description:"Set custom headers on the upload request",type:{name:"union",value:[{name:"object"},{name:"func"}]},required:!1}}};const file=fileName=>({id:fileName,file:{name:fileName},onProgress:[],onSuccess:[],onError:[]}),Upload_stories={title:"Bootstrap Components/Upload",parameters:{docs:{description:{component:"The default export is an all-in-one solution which handles uploads, encrypted file password requests and file state management for you."}}}},Default=_ref=>{let{allowedFileNameCharacters,allowedFileTypes,deliverOnSubmit,deliveryChannel,showFileDrop}=_ref;return(0,jsx_runtime.jsx)(dist.Form,{initialValues:{upload:null},onSubmit:()=>{},children:(0,jsx_runtime.jsx)(src_Upload,{name:"upload",clientId:"123",customerId:"123",bucketId:"789",allowedFileNameCharacters,allowedFileTypes,showFileDrop,deliveryChannel,deliverFileOnSubmit:deliverOnSubmit,fileDeliveryMetadata:{payerId:"AvailityTest"}})})};Default.displayName="Default",Default.args={allowedFileNameCharacters:"",deliverOnSubmit:!1,deliveryChannel:"test",showFileDrop:!0},Default.storyName="default";const FileListStory=_ref2=>{let{fileName1,fileName2}=_ref2;const files=[file(fileName1),file(fileName2)];return(0,jsx_runtime.jsx)("div",{className:"py-3",children:(0,jsx_runtime.jsx)(src_FileList,{files})})};FileListStory.displayName="FileListStory",FileListStory.args={fileName1:"testfile1.pdf",fileName2:"testfile2.png"},FileListStory.storyName="file list",FileListStory.parameters={docs:{description:{story:"The file list displays an upload status bar along with a delete button, allowing for removal of an uploaded file."}}};const FilePickerStory=()=>(0,jsx_runtime.jsx)(dist.Form,{initialValues:{myFile:void 0},onSubmit:()=>{},children:(0,jsx_runtime.jsx)(src_FilePicker,{name:"myFile",tag:CustomInput.A})});FilePickerStory.displayName="FilePickerStory",FilePickerStory.args={tag:"Hello",name:"File Picker",maxSize:2},FilePickerStory.storyName="file picker",FilePickerStory.parameters={docs:{description:{story:"The raw file picker which automatically resets the value of the input, allowing the same file to be selected multiple consecutive files."}}};const FilePickerBtnStory=_ref3=>{let{name}=_ref3;return(0,jsx_runtime.jsx)(dist.Form,{initialValues:{myFile:void 0},onSubmit:()=>{},children:(0,jsx_runtime.jsx)(src_FilePickerBtn,{name})})};FilePickerBtnStory.displayName="FilePickerBtnStory",FilePickerBtnStory.storyName="file picker button",FilePickerBtnStory.args={name:"myfFile"},FilePickerBtnStory.parameters={docs:{description:{story:"The raw file picker button that masks the file input with a button."}}};const UploadProgressBarStory=_ref4=>{let{upload}=_ref4;return(0,jsx_runtime.jsx)(src_UploadProgressBar,{upload})};UploadProgressBarStory.displayName="UploadProgressBarStory",UploadProgressBarStory.storyName="upload progress bar",UploadProgressBarStory.args={upload:file("testfile1.pdf")},UploadProgressBarStory.parameters={docs:{description:{story:"The raw progress bar to be used when making your own."}}};const hidden_FileList=props=>(0,jsx_runtime.jsx)(src_FileList,{...props});hidden_FileList.displayName="hidden_FileList";const hidden_FilePicker=props=>(0,jsx_runtime.jsx)(src_FilePicker,{...props});hidden_FilePicker.displayName="hidden_FilePicker";const hidden_FilePickerBtn=props=>(0,jsx_runtime.jsx)(src_FilePickerBtn,{...props});hidden_FilePickerBtn.displayName="hidden_FilePickerBtn";const hidden_UploadProgressBar=props=>(0,jsx_runtime.jsx)(src_UploadProgressBar,{...props});hidden_UploadProgressBar.displayName="hidden_UploadProgressBar",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'({\n  allowedFileNameCharacters,\n  allowedFileTypes,\n  deliverOnSubmit,\n  deliveryChannel,\n  showFileDrop\n}) => <Form initialValues={{\n  upload: null\n}} onSubmit={() => {\n  // noop\n}}>\n    <Upload name="upload" clientId="123" customerId="123" bucketId="789" allowedFileNameCharacters={allowedFileNameCharacters} allowedFileTypes={allowedFileTypes} showFileDrop={showFileDrop} deliveryChannel={deliveryChannel} deliverFileOnSubmit={deliverOnSubmit} fileDeliveryMetadata={{\n    payerId: \'AvailityTest\'\n  }} />\n  </Form>',...Default.parameters?.docs?.source}}},FileListStory.parameters={...FileListStory.parameters,docs:{...FileListStory.parameters?.docs,source:{originalSource:'({\n  fileName1,\n  fileName2\n}) => {\n  const files = [file(fileName1), file(fileName2)];\n  return <div className="py-3">\n      <FileList files={files} />\n    </div>;\n}',...FileListStory.parameters?.docs?.source}}},FilePickerStory.parameters={...FilePickerStory.parameters,docs:{...FilePickerStory.parameters?.docs,source:{originalSource:'() => <Form initialValues={{\n  myFile: undefined\n}} onSubmit={() => {}}>\n    <FilePicker name="myFile" tag={CustomInput} />\n  </Form>',...FilePickerStory.parameters?.docs?.source}}},FilePickerBtnStory.parameters={...FilePickerBtnStory.parameters,docs:{...FilePickerBtnStory.parameters?.docs,source:{originalSource:"({\n  name\n}) => <Form initialValues={{\n  myFile: undefined\n}} onSubmit={() => {}}>\n    <FilePickerBtn name={name} />\n  </Form>",...FilePickerBtnStory.parameters?.docs?.source}}},UploadProgressBarStory.parameters={...UploadProgressBarStory.parameters,docs:{...UploadProgressBarStory.parameters?.docs,source:{originalSource:"({\n  upload\n}) => <UploadProgressBar upload={upload} />",...UploadProgressBarStory.parameters?.docs?.source}}},hidden_FileList.parameters={...hidden_FileList.parameters,docs:{...hidden_FileList.parameters?.docs,source:{originalSource:"(props: FileListProps) => <FileList {...props} />",...hidden_FileList.parameters?.docs?.source}}},hidden_FilePicker.parameters={...hidden_FilePicker.parameters,docs:{...hidden_FilePicker.parameters?.docs,source:{originalSource:"(props: FilePickerProps) => <FilePicker {...props} />",...hidden_FilePicker.parameters?.docs?.source}}},hidden_FilePickerBtn.parameters={...hidden_FilePickerBtn.parameters,docs:{...hidden_FilePickerBtn.parameters?.docs,source:{originalSource:"(props: FilePickerBtnProps) => <FilePickerBtn {...props} />",...hidden_FilePickerBtn.parameters?.docs?.source}}},hidden_UploadProgressBar.parameters={...hidden_UploadProgressBar.parameters,docs:{...hidden_UploadProgressBar.parameters?.docs,source:{originalSource:"(props: UploadProgressBarProps) => <UploadProgressBar {...props} />",...hidden_UploadProgressBar.parameters?.docs?.source}}};const __namedExportsOrder=["Default","FileListStory","FilePickerStory","FilePickerBtnStory","UploadProgressBarStory","hidden_FileList","hidden_FilePicker","hidden_FilePickerBtn","hidden_UploadProgressBar"];try{hidden_FileList.displayName="hidden_FileList",hidden_FileList.__docgenInfo={description:"",displayName:"hidden_FileList",props:{files:{defaultValue:null,description:"",name:"files",required:!1,type:{name:"any[] | undefined"}},onRemoveFile:{defaultValue:null,description:"",name:"onRemoveFile",required:!1,type:{name:"Function | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/form-upload/src/Upload.stories.tsx#hidden_FileList"]={docgenInfo:hidden_FileList.__docgenInfo,name:"hidden_FileList",path:"packages/form-upload/src/Upload.stories.tsx#hidden_FileList"})}catch(__react_docgen_typescript_loader_error){}try{hidden_FilePicker.displayName="hidden_FilePicker",hidden_FilePicker.__docgenInfo={description:"",displayName:"hidden_FilePicker",props:{tag:{defaultValue:null,description:"",name:"tag",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements> | undefined"}},multiple:{defaultValue:null,description:"",name:"multiple",required:!1,type:{name:"boolean | undefined"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string | undefined"}},allowedFileTypes:{defaultValue:null,description:"",name:"allowedFileTypes",required:!1,type:{name:"string[] | undefined"}},maxSize:{defaultValue:null,description:"",name:"maxSize",required:!1,type:{name:"string | number | undefined"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement> | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/form-upload/src/Upload.stories.tsx#hidden_FilePicker"]={docgenInfo:hidden_FilePicker.__docgenInfo,name:"hidden_FilePicker",path:"packages/form-upload/src/Upload.stories.tsx#hidden_FilePicker"})}catch(__react_docgen_typescript_loader_error){}try{hidden_FilePickerBtn.displayName="hidden_FilePickerBtn",hidden_FilePickerBtn.__docgenInfo={description:"",displayName:"hidden_FilePickerBtn",props:{onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement> | undefined"}},multiple:{defaultValue:null,description:"",name:"multiple",required:!1,type:{name:"boolean | undefined"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string | undefined"}},allowedFileTypes:{defaultValue:null,description:"",name:"allowedFileTypes",required:!1,type:{name:"string[] | undefined"}},maxSize:{defaultValue:null,description:"",name:"maxSize",required:!1,type:{name:"number | undefined"}},"data-testid":{defaultValue:null,description:"",name:"data-testid",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/form-upload/src/Upload.stories.tsx#hidden_FilePickerBtn"]={docgenInfo:hidden_FilePickerBtn.__docgenInfo,name:"hidden_FilePickerBtn",path:"packages/form-upload/src/Upload.stories.tsx#hidden_FilePickerBtn"})}catch(__react_docgen_typescript_loader_error){}try{hidden_UploadProgressBar.displayName="hidden_UploadProgressBar",hidden_UploadProgressBar.__docgenInfo={description:"",displayName:"hidden_UploadProgressBar",props:{upload:{defaultValue:null,description:"",name:"upload",required:!0,type:{name:"UploadType"}},onProgress:{defaultValue:null,description:"",name:"onProgress",required:!1,type:{name:"Function | undefined"}},onSuccess:{defaultValue:null,description:"",name:"onSuccess",required:!1,type:{name:"Function | undefined"}},onError:{defaultValue:null,description:"",name:"onError",required:!1,type:{name:"Function | undefined"}},animated:{defaultValue:null,description:"",name:"animated",required:!1,type:{name:"boolean | undefined"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | undefined"}},tag:{defaultValue:null,description:"",name:"tag",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements> | undefined"}},striped:{defaultValue:null,description:"",name:"striped",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/form-upload/src/Upload.stories.tsx#hidden_UploadProgressBar"]={docgenInfo:hidden_UploadProgressBar.__docgenInfo,name:"hidden_UploadProgressBar",path:"packages/form-upload/src/Upload.stories.tsx#hidden_UploadProgressBar"})}catch(__react_docgen_typescript_loader_error){}},"./packages/hooks/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{xM:()=>useCurrentRegion,iZ:()=>useCurrentUser,FP:()=>useEffectAsync,JO:()=>useMount,Gi:()=>useOrganization,Sk:()=>usePermissions,u9:()=>useProviders,Z3:()=>useTimeout,eY:()=>useToggle,vh:()=>src_useWindowDimensions});var react=__webpack_require__("./node_modules/react/index.js");function useEffectAsync(effect,inputs){(0,react.useEffect)((()=>{effect()}),inputs)}function useMount(effect){(0,react.useEffect)(effect,[])}function useTimeout(){let ms=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const[ready,setReady]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{let unmounted=!1;const timer=setTimeout((()=>{unmounted||setReady(!0)}),ms);return()=>{unmounted=!0,clearTimeout(timer)}}),[ms]),ready}function useToggle(){let initialState=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const[state,setState]=(0,react.useState)(initialState);return[state,newState=>{void 0!==newState&&newState!==state?setState(newState):void 0===newState&&setState(!state)}]}var useQuery=__webpack_require__("./node_modules/@tanstack/react-query/build/lib/useQuery.mjs"),dist=__webpack_require__("./node_modules/@availity/api-axios/dist/index.mjs");async function fetchRegion(){const response=await dist.Nw.getCurrentRegion();return{code:response?.data?.regions?.[0]?.id||"",value:response?.data?.regions?.[0]?.value||""}}function useCurrentRegion(options){return(0,useQuery.I)(["region"],fetchRegion,options)}const fetchUser=async()=>dist.XG.me();function useCurrentUser(options){return(0,useQuery.I)(["user"],fetchUser,options)}const fetchProviders=async config=>dist.Ml.getProviders(config.customerId,config);function useProviders(config,options){return(0,useQuery.I)(["providers",config],(()=>fetchProviders(config)),options)}const fetchPermissions=async config=>dist.Kl.getPermissions(config);function usePermissions(config,options){return(0,useQuery.I)(["permissions",config],(()=>fetchPermissions(config)),options)}const fetchOrganization=async config=>dist.US.getOrganizations(config);function useOrganization(config,options){return(0,useQuery.I)(["organizations",config],(()=>fetchOrganization(config)),options)}__webpack_require__("./node_modules/@availity/message-core/dist/index.mjs");const getWindowDimensions=()=>{const{innerWidth:width,innerHeight:height}=window;return{width,height}},src_useWindowDimensions=()=>{const[windowDimensions,setWindowDimensions]=(0,react.useState)(getWindowDimensions());return(0,react.useEffect)((()=>{const handleResize=()=>{setWindowDimensions(getWindowDimensions())};return window.addEventListener("resize",handleResize),()=>window.removeEventListener("resize",handleResize)}),[]),windowDimensions}},"./packages/progress/dist/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__create=Object.create,__defProp=Object.defineProperty,__defProps=Object.defineProperties,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropDescs=Object.getOwnPropertyDescriptors,__getOwnPropNames=Object.getOwnPropertyNames,__getOwnPropSymbols=Object.getOwnPropertySymbols,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},__toESM=(mod,isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)),index_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(index_exports,{default:()=>Progress_default}),module.exports=(mod=index_exports,__copyProps(__defProp({},"__esModule",{value:!0}),mod));var import_classnames=__toESM(__webpack_require__("./node_modules/classnames/index.js")),import_toNumber=__toESM(__webpack_require__("./node_modules/lodash/toNumber.js")),import_jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Progress_default=_a=>{var _b=_a,{tag:Tag="div",animated,striped,complete,value=0,max=100,className:classes,color="success"}=_b,rest=((source,exclude)=>{var target={};for(var prop in source)__hasOwnProp.call(source,prop)&&exclude.indexOf(prop)<0&&(target[prop]=source[prop]);if(null!=source&&__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(source))exclude.indexOf(prop)<0&&__propIsEnum.call(source,prop)&&(target[prop]=source[prop]);return target})(_b,["tag","animated","striped","complete","value","max","className","color"]);const percent=(0,import_toNumber.default)(value)/(0,import_toNumber.default)(max)*100;return(0,import_jsx_runtime.jsx)(Tag,(a=((a,b)=>{for(var prop in b||(b={}))__hasOwnProp.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(b))__propIsEnum.call(b,prop)&&__defNormalProp(a,prop,b[prop]);return a})({className:(0,import_classnames.default)(classes,"progress",{"progress-complete":complete}),"data-testid":"progress-outer",role:"progressbar","aria-valuenow":value,"aria-valuemin":"0","aria-valuemax":max},rest),b={children:(0,import_jsx_runtime.jsx)("span",{className:(0,import_classnames.default)("progress-bar",`bg-${color}`,{"progress-bar-striped":striped},{"progress-bar-animated":animated}),style:{width:`${percent}%`},"data-testid":"progress-inner"})},__defProps(a,__getOwnPropDescs(b))));var a,b}}}]);